CHANGES
=======

0.25.1
------

* Release 0.25.1
* Updated change log for fix with os\_ipl\_token parm
* lpar: scsi\_dump: add missing \`os-ipl-token\` parameter
* Start 0.25.1

0.25.0
------

* Release 0.25.0
* Added support for Storage Templates
* Reflected review comments on previous commit
* Add more LPAR commands
* Docs: Added 2.14.1 to Bibliograohy and Introduction
* Start 0.25.0

0.24.0
------

* Release 0.24.0
* Added support for multiple notification topics in NotificationReceiver
* Added timezone support to zhmcclient.datetime\_from\_timestamp()
* Changed import of stomp module to be lazy for zhmcclient import speed
* Fixed incorrect HTTP methods on get\_security/audit\_log()
* Changed exception raised when login user is not authorized
* Blanked out the session ID value in the log record for logging off
* Improved show\_os\_messages.py example
* Improved end2end test support for zhmcclient users
* Fixed LookupError in test\_session.py test with latest requests\_mock
* Fixed CygWin environment in Appveyor CI
* Fixed support for CygWin in Appveyor
* Major rework to use correct Python in Appveyor CI and other minor fixes
* Start 0.24.0

0.23.0
------

* Release 0.23.0
* Cleaned up logging
* End2end test for CPC: Split faked hmc file; added CPC print
* Fixed blanking out of passwords and session tokens in log
* Added logging support to end2end tests
* Reduced Travis CI environments to only 3 Linux envs
* Pinned Sphinx to below 2.0.0 also for py3.5+
* Added end2end testcases for CPCs
* Added support for faked HMCs to end2end tests
* Added support for end2end tests using HMC definition file and fixtures
* Fixed list\_storage\_groups.py example
* Added support for zeroize single crypto domain
* Start 0.23.0

0.22.0
------

* Release 0.22.0
* Mitigated that fIltering by adapter-id returns empty result for hex digits
* Several fixes in Travis control file for OS-X
* Fixed install of latest reqs
* Docs: Updated how to release a version
* Fixed incorrect HMC method in a comment on 202 processing
* Start 0.22.0

0.21.0
------

* Release 0.21.0
* Update requests package to 2.20.0 in requirements.txt
* FIxed metrics example by adding sleep
* Start 0.21.0

0.20.0
------

* Release 0.20.0
* Fixed flake8 issues
* notification: add parameter port
* tests: add test for HMC port
* session: add parameter port
* notification: move constant \_STOMP\_PORT to constants
* session: move constant \_HMC\_PORT to constants
* Lpar: add support for reset clear
* lpar: add support for stop
* lpar: add support for SCSI load
* Add tests for store-status-indicator
* lpar: allow to specify store-status-indicator on Load
* Add tests for clear-indicator
* lpar: allow to specify clear-indicator on Load
* lpar: fix typo
* Fixed several bugs in DPM storage group support
* Upgraded dependent package versions from zhmc-ansible-modules
* Fixed Sphinx build on Python 3.7 with AutoAutoSummary extension
* Added Adapter.change\_adapter\_type() operation
* Added end2end test for storage groups
* Implementation of DPM storage group support for FCP
* Added design for DPM storage management feature
* Added method and attribute summary lists to class docs
* Inspection of firmware features
* Navigate from Cpc to Client
* Direct access to the one Console object
* Fixed issue with None input in \_utils.repr\_\*()
* Added conf.py to make check
* Added z14-ZR1 and Rockhopper II support
* Converted function tests to end2end tests
* Fixed warning on changes.rst during builddoc
* Added support for Python 3.7
* Enhanced faked resources to automatically set parent prop
* Pinned version of pytest-cov to <2.6
* Improved repr() output of faked and real resource and manager classes
* Travis: Consistent .travis.yml between external and IBM Travis
* Improved error handling in determination of package version in Makefile
* Consolidated internal nic\_/partition\_object() methods to resource\_object()
* Travis: Moved venv directory on OS-X out of work directory
* Travis: Enabled caching for pip
* Fixed release description for RTD stable builds
* Streamlined and extended 'how to release' section in docs
* Restarted 0.20.0
* Excluded .DS\_Store file (on OS-X) from git
* Updated change log with missing entry about appveyor changes
* Removed debug info for RTD but left a few prints in
* More debug info and a test tag
* Fixed package version on latest/master build on RTD
* Lowered version reqs for dependent packages
* Fixed Git rebase in Appveyor CI
* Made makefile consistent with zhmccli and fixed minor errors
* Docs: Improved docs for installing without Internet and sel. Python env
* Made makefile consistent with zhmccli and fixed minor errors
* Improved Makefile with extra check for empty package version
* Docs: Resolved Sphinx build warnings
* Added debug info for package version issue to Sphinx build
* Started 0.20.0 release

0.19.0
------

* Updated change log for 0.19.0 release
* Fix use of double brackets in make shell()
* Using == insteaf of === in constraints file
* Added unit tests for \_metrics module; Fixed metrics mock support
* Fixed TypeError in metrics support; improved metrics example
* Changed make install to be editable; makefile improvements
* Added .pytest\_cache directory to .gitignore
* Travis for OS-X: Fixed virtualenv for Python 3 and enabled py3
* Supressed makefile init error messages
* Travis for OS-X: Fixed changed Python install and added py2 run
* Extended mock by class and child res; added FT for Act.Profiles
* Added function test concept, accomodating pytest 3.3.0
* Small improvement in setup of zhmcclient logging
* Added support for CPC energy management operations
* Disabled coveralls in manual-ci-run

0.18.0
------

* Added ability to mock status of Lpar act/deact/load
* Made load address optional for Lpar.load() to support z14
* Increased CodeClimate complexity threshold to 'D'
* Improved unit tests for \_lpar module
* Added force and act.profile name parms to Lpar act/deact/load
* Restructured tests subtree
* Migrated remaining test cases from unittest to py.test
* Disabled the unit test functions that print datetime info
* Fixes and improvements in Makefile
* Enabled Travis and Appveyor for manual-ci-run
* Started 0.19.0
* Released 0.18.0
* Fix build\_clib issue on Travis by removing duplicate setuptools
* Removed zhmc CLI from this project
* Started 0.18.0 release

0.17.0
------

* Updated change log for 0.17.0 release
* Add CLI support for mount and unmount an ISO
* Disabled OS-X runs in Travis CI
* Added support to zhmcclient for Console resource and its children
* Docs: Fixed HMC API version and API book ref. for z14
* Improved the docs for Metric\*Definition named tuples
* Fixed TypeError in unit test of metrics mock support
* Fixed in zhmc CLI that session create used existing session ID
* Fix TypeError in zhmcclient\_mock/\_urihandler.py
* NIC: Migrated unit test to py.test, Changes in mock support
* Migrated HBA unit tests to py.test; Small fixes to Hba
* Extended InvalidResourceError in mock support
* Improved mock support to return HTTP 400 instead of raising ValueError
* Test BaseResource: Improved assertion info, consistent URIs
* Added CPC and Partition status checks to mock support where missing + cleanup
* Migrated \_client,\_exceptions modules to py.test; changes to exceptions
* Eliminated pip warnings when using minimum-constraints.txt
* Changed Makefile to use pbr for package version
* Circumvented ImportError for build\_clib on Travis with Py 2.7.13
* Added tests for null props to Partition + Image Act. Profile
* Added '\_\_repr\_\_()' to 'Session' and 'FakedSession' classes
* Fixed in zhmc CLI that session create used existing session ID
* Fixed empty PIP\_CMD in cron-triggered Travis runs
* Added mock support for the zhmcclient Metrics support
* Added timestamp related utility functions
* Access to partition from nic and vfunction via respective manager
* Expanded the regular cron-triggered Travis run
* CLI: Fixed AttributeError when aborting confirmation question
* Minor doc improvements in Development section
* Eliminated DeprecationWarning for invalid escape sequences on Py3
* Removed sudo requirement in Travis for OS-X
* Removed sudo requirement from Travis
* Started 0.17.0 release

0.16.0
------

* Updated change log for 0.16.0 release
* CLI: Remove defaults for options for 'partition update'
* Add Code Climate Badge
* Customized codeclimate
* Started 0.16.0 release

0.15.0
------

* Updated change log for 0.15.0 release
* CLI: Fixed AttributeError with dict.iteritems() on Python 3
* Rename z Systems family to IBM Z
* Fix Code of Conduct link
* Add 1.4 of Contributor Covenent Code of Conduct
* Add config file for Code Climate tool
* Update link to 'How to Get Your Change Into the ...'
* Improved Cpc.get\_free\_crypto\_domains()
* Editorial changes on package reqs
* Updated package requirements
* Improved error message for WS not enabled
* CLI support for processing weights
* Docs: Fixed supported environments in intro
* CLI support for enable partition controls
* Minor fixes in documentation
* Minor optimizations in Travis control file
* Restricted 'make test' to look just in 'tests' dir
* Fixed Travis CI for OS-X
* Added support for z14; Added new API versions for z13
* Optimized build of distribution archives
* CLI: Fixed several Python 3 errors
* Fixes and small improvements for metrics CLI
* Fixed test errors
* Metrics: Adjusted CLI to API changes and improved it; added metrics
* [WIP] Add Metrics CLI commands
* Improved the tools/cpcdata script
* Reworked structured access to metrics response
* Reflected review comments to metrics support
* [WIP] Add Metrics Support
* Started 0.15.0 release

0.14.0
------

* Updated change log for 0.14.0 release
* Mock: Added support for Get Connected VNICs operation
* Mock: Improvements and testcases for partition crypto ops
* Mock: Added support for remaining partition ops in URI handler
* Fixed AttributeError in log module for jupyter/interactive
* Improved the tutorial 04 error handling
* Mock: Added support for HBA Reassign Port operation
* Mock: Added support for Change Crypto Type of Adapter
* Mock: Fixed fields check in URI handler of increase/decrease crypto
* Mock: Cleanup and improvements in URI handler
* Reduced Travis CI further
* Docs: Improved Nic/Hba.create() descriptions
* Test: Migrated unit tests to py.test + zhmcclient mock, part 1
* Mock: Fixed partition.start/stop() result
* Mock: Added checking for status conflicts for Partition.start/stop()
* Mock: Fixed partition.start/stop() result
* Reduced test variations for Appveyor CI
* Mock: Added checking for status conflicts for Partition.start/stop()
* Mock: Added URI handler for CPC Export / Import Profiles
* Mock: Several fixes in URI handler for CPC Export WWPN List
* Fixed updating the name-to-URI cache when renaming
* Added update\_properties() to Cpc and Lpar
* Added update\_properties() to Cpc and Lpar
* Reduced Travs CI runs on Linux
* Added support for listing free crypto domains (experimental)
* Fixed card type of Crypto Express 5s adapter
* Mock: Added checking of required input props in Create ops
* Fixed optimized lookup by object-id
* vlan-id must be an integer
* Mock: Fixed FakedBaseResource init when properties are empty
* Created tests/unit/utils.py with shared code between the testcases
* Added properties for max partitions and max crypto domains
* Fixed JSON serialization issue in increase/decrease\_crypto\_config()
* Added support for Get Inventory operation
* Corrected parameters of Partition.mount\_iso\_image()
* Improved performance of lookup by object-id
* Improved misleading exception message in mock support
* Fixed errors in unit testcases for Act.Profile
* Added circumvention for duplicate port URIs in FCP adapter
* Moved PyLint invocation into its own 'pylint' make target
* Improved NoUniqueMatch exception to show matching resources
* Added waiting for desired status to Partition.start()
* Change log for crypto support, documented missing mock support
* Added mock support for crypto operations
* Fixed names of request body parms in change\_crypto\_config()
* Updated the description of crypto functions
* Add Crypto Support for Partitions
* Fixed shallow copy errors for input properties of resources
* Fix ssc-dns-servers option handling in CLI
* Fixed TypeError with find\_partition(), find\_lpar()
* Added wait\_for\_status() methods to Lpar and Partition
* Added support for selecting the format of CLI error messages
* Updated IBM copyright statement to reflect 2017
* Made code-block highlighting in docs consistent
* CLI: Added support for an OS console into partition/LPAR
* Circumvented urllib3 issue with requests 2.17.1 and 2.17.2
* Improved exceptions by splitting classes and adding attributes
* Improved description of CLI output formats
* CPI: Improvements for dealing with LPAR status 'exceptions'
* Increased default status timeout from 60s to 15min
* Improved ParseError message for better diagnosing
* Updated CLI docs to show all subcommands
* Improved test coverage of adapter module
* Improved test coverage of activation\_profile module and used mock
* Improved test coverage of manager module
* Improved test coverage for logging module
* Improved testability by using assert
* Improved test coverage of exceptions module
* Improved test coverage and docs for timestats module
* Changed return value of TimeStatsKeeper.snapshot() from tuple list to dict
* Doc fixes for return value of asynchronous Partition methods
* Fixed docs for releasing and starting new release
* Remove empty list items in change log
* Started 0.14.0 release

0.13.0
------

* Updated change log for 0.13.0 release
* Add Secure Service Container Support
* Fixed filter args for properties that are not on every resource
* Improved repr() and str() in various places
* Fix when providing 'load-parameter' option
* Deprecated flush() and renamed invalidate\_name\_uri\_cache()
* Improvements and fixes in mock support
* Fixed incorrect result of Cpc.dpm\_enabled for z13 in classic mode
* Fixed client-side filter matching
* Fixed find(name) on element resources
* Improved description of filter arguments
* Fixes in unit tests for update\_properties() and delete()
* Fixed stale name-to-URI cache and other improvements
* Fixed unconditional addition of ifl-processors in CLI
* Restricted read retries to just HTTP GET
* Mitigated issue with read retries and DELETE
* Improved issue template
* Fixed defaults for 'zhmc partition create'
* Wrote Concepts chapter
* Started 0.13.0 release

0.12.0
------

* Updated change log for 0.12.0 release
* Changed documentation heading
* Add load-parameter to 'zhmc lpar load'
* Docs: Added internet-less install; minor other improvements
* Improved testcases for object-id/element-id in mock support
* Improved description of Pypi release process
* Fixed package dependencies for minimum pkg level
* Changed logging options of CLI to be more flexible
* Added logging support to CLI
* Fixed typo in description of FakedHmc
* Added support for 'error' field in 'job-results'
* Added -p/--password option; Added host+userid to get\_password()
* Improved robustness of timestats unit tests
* Added OS-X to Travis CI environment
* Fixed minor doc build issues
* In CLI, add support for -y option
* Fixed display of CLI spinner in output
* Added testcases for Faked\* repr() and attrs
* Fixes and improvements in mock support
* Moved logging constants to new \_constants module
* Improved the log calls
* Assign WWPN for HBA in mock framework
* Start development of v0.12.0

0.11.0
------

* Updated change log for 0.11.0 release
* Add more output formats to the CLI
* Change DEFAULT\_READ\_TIMEOUT to 5 min
* Rebased on PR 206; session defaults for ops and status timeouts
* Fixed errors when waiting for completion of LPAR status
* Timeout support for async methods; deferred status polling for LPAR
* Moved retry and timeout default values into a new \_constants module
* Improved handling of network errors
* Added support for tolerating HTML response content
* Improved help of zhmc CLI
* Testing with minimum/latest versions of dependent Python packages
* Added automatic devno setting for NIC, HBA, VF in mock support
* Increased minimum version of 'click-spinner' dependency to 0.1.7
* Minor docstring correction to send\_os\_command methods
* Added tools to check target and fixed flake8 errors
* Added minimum version 4.0.0 to 'decorate' dependency
* Added send\_os\_command method to partition and lpar
* Docs: Improved README file and example in intro chapter
* Added Python 3.6 to PyPI metadata
* Minor formatting fixes for return values in docs
* Fixes #178: Redesigned return value of async. operation methods
* Started development of v0.11.0

0.10.0
------

* Update change log for 0.10.0 release
* Updated change log; Declared NotificationReceiver as experimental
* Added termination of notification receiver and unit tests
* Mitigated multiple coveralls comments per Travis build
* Added Python 3.6 to Travis CI and 3.4,3.5,3.6 to Appveyor CI
* Fixed incorrect copyright year in new files
* Fixed incorrect use of partition when it was lpar
* Improved example lpar\_operations
* Added a JMS notification receiver and examples for os messages
* Changed open\_os\_message\_channel() method to return string directly
* Added open\_os\_message\_channel() method to lpar and partition classes
* Mock support for zhmcclient, stage 2: Faked Session (partial)
* Mocking support for zhmcclient, stage 1: Fake HMC
* Fix unrecognized field ('adapter-port')
* Fix access 'cpc' from 'partition'
* Added documentation of auth reqs
* Added support for server-side resource filtering
* Rename files in examples folder
* Fix error in example5.py
* Add Appveyor status badge
* Reflected comments from PR 144
* Design for fake client, for review
* Fixed assertion error in TimeStats testing on Windows
* Start v0.10.0 development

0.9.0
-----

* Updated change log for 0.9.0 release
* lpar.load(): Added support for load-parameter field
* Fixing regression in findall(name=..)
* Improved the examples
* Added initial support for Appyevor CI
* Fixes #137: Accessing properties['name'] may raise KeyError
* Add example for CLI zhmc
* Links to HMC API books in docs no longer require IBM ID
* Started v0.9.0 development

0.8.0
-----

* Updated change log for 0.8.0 release
* Added a 'cpcdata' tool for showing CPC info in a data center
* Fixed some flake8 errors (real and style)
* Improvements in CLI list commands (options, ordering, always a name)
* Added support for lazy initialization of resource name
* In CLI, fixed boolean update opt, help texts; optimized ops
* Fixed an issue in the new find\_by\_name
* Added messages to assertions; removed an assertion
* FIxes and small improvements for CLI
* Added support in CLI for remaining cmds; client improvements
* Upgraded click-spinner to v0.1.5 and simplified its use
* Started v0.8.0 development

0.7.0
-----

* Fixed #120: Pin click-spinner to 0.1.3
* Fixed incorrect package version for Pypi upload
* Started 0.7.0 release
* For zhmc CLI, added RTD documentation and improved help texts

0.6.0
-----

* Updated change log
* Enabled and fixed flake8/pylint checking for zhmccli, and other stuff
* Renamed two modules in zhmccli
* Changes for zhmccli
* Command line interface for the zhmcclient
* Improvements to Session initialization, mainly docs
* Session object can be created with session id
* Improved VersionError exception class and removed number-of-args tests
* Added issue template
* Fixed new Flake8 issue E305
* Added time statistics entry for overall async operations
* Updatd example5 to allow for CPC being in 'service-required' state
* Fix typo in help message of cpcinfo
* Fixes #101: Fix documentation of field Partition.hbas
* Fixes #99: KeyError: 'status' when running example5.py
* PyLint fixes and a real fix in dump\_partition()
* Improved AuthError and ConnectionError exceptions
* Improved ParseError and its use
* Removed not-yet-used hint on some exceptions in tutorial 4
* Fixed change log to represent v0.5.0 and improved how-to-release section
* Further improvements in tutorial 3 and new tutorial 4
* Simplified install from repo and enabled it for users without github key

0.5.0
-----

* Improved tutorial notebooks
* Fixed HTTPError in dpm\_enabled
* Moved unit tests to tests/unit and added tests/function
* Made unit tests consistent
* Fixed error in unit test for exceptions module
* Added HTTP method and URI to HTTPError information
* Fixed issue where cpcinfo -a failed on python 3
* Improved Tutorials section
* Added pypy Python to Travis CI environments
* Added an install test to Travis CI and to Tox
* Added install test to Travis CI
* Several logistical cpcinfo fixes
* Moved change log section one heading level down
* Docs: Added change log section
* Docs: Updated resource model
* Added more HBA/storage related methods
* Added adapter information to the cpcinfo tool
* Adjusted mocking in CPC testcases to new impl of dpm\_enabled; fixed error
* Optimized dpm\_enabled implementation for better performance
* Added cpcinfo tool and prop() method for resources
* Removed downloads button in readme and added bigquery in comment
* Renamed get\_connected\_vnics() to get\_connected\_nics()
* Docs: Added section for releasing to PyPI
* Consolidated Python resource object creation into resource modules
* Changed connected\_vnics() to return Nic objects

0.4.0
-----

* Fixed doc links to resource types
* Made documentation of Port / PortManager consistent with other resources
* Resolved comments on PR
* Add more unit tests for CPC class
* Add Port Support
* Improved stomp example; fixed flake8 error in session
* Added get\_notification\_topics() and stomp job-completion message example
* Added Repository section to Development chapter
* Updated documentation of resources classes
* Improved documentation of resource modules and renaming of a method argument
* Update example5
* Changed create...() to return resource object instead of URI
* Add Virtual Switch Support
* Add more partition operations
* Add Virtual Function Support
* Added Resource Model in Appendix
* Update documentation header
* Add HBA Support
* Add NIC Support
* Add Adapter support
* Simplify quickstart example

0.3.0
-----

* Editorial update in dev heading of README
* Integrated CONTRIBUTING.rst content in Development section of docs
* Changed link to Installation section in README to be to Pypi/stable version
* Minor improvements in README.rst
* Add string representation of BaseResource
* Update install documentation
* Added 'Development' chapter to the documentation
* Added an 'Issue reporting' section to the Intro chapter
* Updated Introduction chapter
* Fixed incorrect args/kwargs prototype generated when using \_log\_call
* Added Unit Tests for Profile Activation class
* Added Unit Tests for Partition class
* Fixed flake8 problems
* Added Unit Tests for Lpar class
* Sorted the operations in TimeStats display
* Fixed missing parameters for BaseResource.get\_property()
* Restructured and improved the documentation
* Added image for unit test coverage
* Improved documentation for logging
* Added support for Coveralls
* Updated Unit Tests because of removal of DPM checking
* Remove internal DPM check
* Added more status images to README.rst
* Updated several fields in setup.cfg
* Removed trailing spaces
* Update build handling in Makefile
* Addressed PyLint issues and added uri property to BaseResource class

0.2.0
-----

* Improved description of supported environments
* Disabled Travis notification emails
* Improved description of git sign-off line in CONTRIBUTING.rst
* Fixed all flake8 issues and enforced issue-free flake8 in make check
* Fixed links to Jupyter otebooks in tutorial section
* Added links to RTD documentation to README.rst
* Enabled documentation for activation profiles and fixed minor markup issue
* Embedding Status Images in README.md
* Fixed github links in documentation
* Fixed vagrant setup typo
* Added Travis CI control file
* Added unit tests for query\_job\_status and delete\_completed\_job\_status
* Updated README file to fix link to CONTRIBUTING.rst
* Updated README file to explain how to start using it, and how to contribute
* Modified example4 to call delete\_completed\_job\_status()
* Issue #14 Delete completed job
* Updated example for activation profiles
* Added update writable properties method to activation profile class
* Adapt resource unit test due to activation profile changes
* Updated documentation for activation profile changes
* Fixed issue #18
* Removed statement about AUTHORS file in contribution description (incorrect and not needed)
* Added example for Activation Profile handling
* Added Activation Profiles handling
* Improvements in build environment (.mailmap, AUTHORS/ChangeLog, MANIFEST\*, make clean)
* Documented optional identifier in summary line
* Added unittest for client class
* Fixed two underscores in \_api\_\_version
* Issue #11: Provide query\_api\_version() which provides the results of GET /api/version
* Maintain order in HTTP response body when returned as json object
* Improved logging module and its use
* Issue #12: Add license of the library as comment in requirements.txt and dev-requirements.txt
* Improved description of asynchronous operations for CPC start and stop
* Moved the setting of data into the branch where it is used
* Fixes and implementations for CRUD ops in Partitions
* Fixes #12: example4.py: NameError: name 'logging' is not defined
* Fixed and improved description of asynchronous operations to match current impl
* Updated contribution rules with comments by Viktor

0.1.0
-----

* fix the unit tests for the session object
* Adds an example how we could log the entry/exit of HMC calls
* Updated documentation for operations in asynchronous mode and example4
* Update example4.py to se yaml file for parameterization
* Support for asynchronous handling (non-blocking) of operations (jobs)
* Resolved merge conflicts in exampl2.py
* Added document describing contributions, and DCO rules
* Allow for a local 'try' directory by adding it to .gitignore
* Addressed comments by Markus Zoeller and fixed exception handling in post job get
* Fixed timestats and added unit tests
* Added time statistics for measuring HMC response times
* Session improvements (connection pooling, testcases, PyLint)
* Resolved flake8 and PyLint issues and Python 3 test failures for \`\_exceptions\` module
* Fixed flake8 issues and PyLint issues for \`\_cpc\` module
* Revert "Adds an example how we could log the entry/exit of HMC calls"
* Reduced PyLint output to just the messages (no reports)
* Adds an example how we could log the entry/exit of HMC calls
* Removed \`PYTHONPATH=.\` from commands in the Makefile
* Added prints and logging to the examples
* Added mocked testcases for \`\_cpc\` module
* add regression test for issue 7
* fix the need to add PYTHONPATH=. for unit test execution
* Reworked unit test cases for \_resource module
* Fixes and improvements in README.rst
* updated README.rst to reflect tox changes
* Improvements for running \`tox\`
* Solved merge conflicts
* Update example4.py to se yaml file for parameterization
* Support for asynchronous handling (non-blocking) of operations (jobs)
* Use a tuble instead of a list
* On success of logoff operation, HTTP status code 204 (No Content) is returned with no response body
* Improvements and unit tests for exceptions
* Support for asynchronous handling (non-blocking) of operations (jobs)
* examples: Use yaml file for example parameterization
* Implemented partition create()
* Documented the possible exceptions
* Made body argument of post() optional, with None = empty body being the default
* Updated examples
* Added definition of the three CPC modes
* Minor improvements in Partition, Lpar and CPC
* Updates for Merge Request #18
* Resolved merge conflicts
* Merged review comment changes
* Added \`\_partition\` module to \`\_\_init\_\_.py\` and to documentation
* First release for DPM support
* Solved merge conflicts
* Merged review comment changes
* Added \`\_partition\` module to \`\_\_init\_\_.py\` and to documentation
* First release for DPM support
* Apply review findings for branch cpc info vs cpc full properties
* Updated README.rst to better describe goal and current state of the project
* Added \`\_partition\` module to \`\_\_init\_\_.py\` and to documentation
* First release for DPM support
* Added means to get the full number properties for resource objects like CPC and LPAR
* Added document for full\_properties bool parameter
* Added example3.py for showing usage of full properties option in cpc.list()
* Added full\_properties option to cpc.list()
* Removed hashbang from python modules
* Removed merge conflicts
* Simplified handling of temp files in Makefile
* Fixes for Flake8 usage: Removed flake8.log file in \`make clobber\`; Downgraded package dependency from flake8>=3.0 to flake8>=2.0
* Addressed issues raised by Flake8; Adjusted line length of PyLint to 79 for Flake8 consistency
* Added copyright header to examples, rst files and tests files
* Added support for checking with flake8
* Cleaned up to resolve Pylint issues
* Added license information
* Removed pyyaml dependency from requirements.txt again, because it is in dev-requirements.txt
* Minor fixes in documentation
* Changed representation of resource properties such that the resource object has a new member 'properties' that is a dictionary with the properties
* Changed representation of resource properties such that the resource object is a dictionary with the properties
* Simplified commands in tox.ini file
* Changed output format of coverage checks to be HTML
* Improved class descriptions of base and derived resource classes
* Improved documentation (Intro, CPCs, LPARs)
* Added BaseResource and moved common functions and properties into base classes, for both resource and manager classes
* Redesigned a little bit to move version\_info() away from Session, plus some more
* Added credentials yaml file to examples. Adjusted lpar module to client redesign
* Improved and documented Session class and improved HTTPError exception class
* Fixed URLs in README.rst and setup.cfg to use renamed repo name
* Fixed URLs in README.rst and setup.cfg to use renamed repo name
* Fixed examples by adjusting to the previous changes
* Added simple error handling for JSON parsiung in HTTPError exception
* Initial stab at defining exceptions for the client. Not yet ready
* Added support for testing locally using 'tox'
* Added Makefile with test, coverage, Sphinx docu, Pypi upload, etc
* Initial changes for discussion of Andy's proposal
* Added two examples to use the library
* Removed print statement
* Added status update method to lpar class
* Added load operator to Lpar class
* Implemnented activate and deactivate methods
* Adde BaseManager class with common methods like find
* Added CPC find method
* Implemented lpar classes
* Added first release for client, cpc, lpar, session and version
* Initial packaging setup with setuptools and pbr
* Added intial empty implementation
* Added initial .gitignore file
* Added Vagrant test environment
* Added initial README file
