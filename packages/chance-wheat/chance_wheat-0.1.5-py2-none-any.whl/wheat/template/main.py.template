#!/usr/bin/env python
# -*- coding: utf-8 -*-
# File              : wheat/template/main.py.template
# Author            : Jimin Huang <huangjimin@whu.edu.cn>
# Date              : 06.02.2018
# Last Modified Date: 06.02.2018
# Last Modified By  : Jimin Huang <huangjimin@whu.edu.cn>
# -*- coding: utf-8 -*-
# File: {FILE_NAME}
# Author: {AUTHOR_NAME}
"""{PROJECT_NAME}

Usage:
    {PROJECT_NAME} [--config=CONFIG]
    {PROJECT_NAME} (-h | --help)
    {PROJECT_NAME} --version

Options:
    -h --help               Show help info.
    --version               Show version.
    --config=CONFIG         Set database config. [default: deploy]
"""
import logging

from chanconfig import MultipleConfig
from docopt import docopt
from exception_capturer import exception_capture
from logging.config import dictConfig
from orm.session import DBSessionMaker

from {PROJECT_NAME}.constant import CONFIGS


LOGGER = logging.getLogger(__name__)


def initialize_logger(config):
    """initial logger config

    Args:
        config: a dict for logging config
    """
    dictConfig(config)
    LOGGER.info('Initialize logger')


def read_arguments():
    """Read arguments from stdin and config file

    Return:
        a dict of arguments
    """
    argv = docopt(__doc__, version='{PROJECT_NAME} V0.1.0')
    config = CONFIGS[argv['--config']]
    return MultipleConfig(config[0], config[1], argv).dict


def run():
    """Run main logic
    """
    pass


def main():
    """Entrance
    """
    logging_config = MultipleConfig(*CONFIGS['logging'])
    initialize_logger(logging_config.dict)
    LOGGER.info("Start")

    configs = read_arguments()
    DBSessionMaker.connect(**configs['mysql'])

    try:
        run()
    except Exception:
        exc_info = exception_capture()
        LOGGER.error(exc_info)

    DBSessionMaker.close()
    LOGGER.info("End")
