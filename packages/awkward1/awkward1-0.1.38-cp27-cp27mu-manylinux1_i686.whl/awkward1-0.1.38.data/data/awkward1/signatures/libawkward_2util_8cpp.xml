<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="libawkward_2util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">sstream</includes>
    <includes local="yes">awkward/cpu-kernels/identity.h</includes>
    <includes local="yes">awkward/cpu-kernels/getitem.h</includes>
    <includes local="yes">awkward/util.h</includes>
    <includes local="yes">awkward/Identity.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/libawkward/util.cpp</label>
        <link refid="libawkward_2util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>awkward/util.h</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>awkward/cpu-kernels/getitem.h</label>
      </node>
      <node id="4">
        <label>awkward/cpu-kernels/identity.h</label>
      </node>
      <node id="7">
        <label>awkward/Identity.h</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceawkward">awkward</innernamespace>
    <innernamespace refid="namespaceawkward_1_1util">awkward::util</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5cf65ec676d09c60c51f50794ab88153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void awkward::util::handle_error</definition>
        <argsstring>(const struct Error &amp;err, const std::string classname, const Identity *id)</argsstring>
        <name>handle_error</name>
        <param>
          <type>const struct Error &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const Identity *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="14" column="10" bodyfile="src/libawkward/util.cpp" bodystart="14" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0f7537c9eb09fb13062c51be394a4a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string awkward::util::quote</definition>
        <argsstring>(std::string x, bool doublequote)</argsstring>
        <name>quote</name>
        <param>
          <type>std::string</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>doublequote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="35" column="17" bodyfile="src/libawkward/util.cpp" bodystart="35" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8edd45202d3bb99b953a0dedee1c4d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identity64_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identity64_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="46" column="5" bodyfile="src/libawkward/util.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6e2acdfc954f14dffc2d3f582026428c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identity64_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identity64_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="50" column="5" bodyfile="src/libawkward/util.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a16520ab2a50710adc4155e188d7bd450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identity64_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identity64_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="55" column="5" bodyfile="src/libawkward/util.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1bd30b78640996660a7ed6083ac8ef27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identity64_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identity64_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="59" column="5" bodyfile="src/libawkward/util.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cdf735524b577a33696b6dfbe507c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="64" column="5" bodyfile="src/libawkward/util.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a332e036036f0a2a7b6ae1ccbd5fb9328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="68" column="5" bodyfile="src/libawkward/util.cpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6669b4753da68138261314266664870f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="72" column="5" bodyfile="src/libawkward/util.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af6d5697f061dd5b2bc6d6371fab63406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="77" column="5" bodyfile="src/libawkward/util.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5994a80cfed68d5ca9a74ec77532eec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="81" column="5" bodyfile="src/libawkward/util.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab91ff6d314c26700c4e4130b6ab4e6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="85" column="5" bodyfile="src/libawkward/util.cpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace2f8fb19c1c5895a11057e5f06ba44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tooffsets, int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="90" column="5" bodyfile="src/libawkward/util.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35f040e2474502f3ebcd72814d81697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tooffsets, int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="94" column="5" bodyfile="src/libawkward/util.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27301acf05d62d2cddc63402f113186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="98" column="5" bodyfile="src/libawkward/util.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a821d22c5eb2612a50ccd25fad385d50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *total, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="103" column="5" bodyfile="src/libawkward/util.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab7818ea817b037e54c287c5e6209e8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *total, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="107" column="5" bodyfile="src/libawkward/util.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad129226cfdbe60197ecfef8bb310799d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *total, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="111" column="5" bodyfile="src/libawkward/util.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a24d53416cb24aeef4b57ca3b206006f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="116" column="5" bodyfile="src/libawkward/util.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab0ff064b87b541a65ddcba92a1b2292e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="120" column="5" bodyfile="src/libawkward/util.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a55f52d86ee9c4cc0959c9d5123830143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="124" column="5" bodyfile="src/libawkward/util.cpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4bc0f3e2a70ded4d83275a82befbf25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="129" column="5" bodyfile="src/libawkward/util.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5ed659284b8769b5f1a86c4f80b3d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="133" column="5" bodyfile="src/libawkward/util.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1e4359f0b4b6cd14f0c3655abc01efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="137" column="5" bodyfile="src/libawkward/util.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3c9079e2d6d2eff270b7df911801b07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="142" column="5" bodyfile="src/libawkward/util.cpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a5ce7851259ae74844da07ed068ab7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="146" column="5" bodyfile="src/libawkward/util.cpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3853c79e8dfd566edb8c1c2affc70934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="150" column="5" bodyfile="src/libawkward/util.cpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a56c8f0daa473f11d34e367c7f6d7100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tostarts, int32_t *tostops, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="155" column="5" bodyfile="src/libawkward/util.cpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab998cec0a24c51454bdf93e04ee173a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tostarts, uint32_t *tostops, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="159" column="5" bodyfile="src/libawkward/util.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a02e137f16fe72a0671a42b43cc5bb543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tostarts, int64_t *tostops, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="163" column="5" bodyfile="src/libawkward/util.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/libawkward/util.cpp"/>
  </compounddef>
</doxygen>
