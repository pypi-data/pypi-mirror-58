Metadata-Version: 2.1
Name: itertools-len
Version: 1.0
Summary: Building blocks for iterators, preserving their :func:`len`\ s.
Home-page: https://github.com/flying-sheep/itertools-len
License: UNKNOWN
Author: Philipp A.
Author-email: flying-sheep@web.de
Requires-Python: >= 3.6
Description-Content-Type: text/x-rst
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Requires-Dist: get_version
Requires-Dist: pytest ; extra == "test"
Requires-Dist: black ; extra == "test"
Provides-Extra: test

itertools-len
=============

|pkg| |docs| |ci| |cov|

.. |pkg| image:: https://img.shields.io/pypi/v/itertools-len
   :target: https://pypi.org/project/itertools-len
.. |docs| image:: https://readthedocs.org/projects/itertools-len/badge/?version=latest
   :target: https://itertools-len.readthedocs.io
.. |ci| image:: https://travis-ci.com/flying-sheep/itertools-len.svg?branch=master
   :target: https://travis-ci.com/flying-sheep/itertools-len
.. |cov| image:: https://codecov.io/gh/flying-sheep/itertools-len/branch/master/graph/badge.svg
   :target: https://codecov.io/gh/flying-sheep/itertools-len

Have you ever been annoyed that the length information of ``itertools`` have not been preserved?

This module faithfully wraps every one of them (together with ``map``) where ``len`` can be derived:

>>> from itertools_len import chain, product
>>> len(chain('abc', [1, 2]))
5
>>> len(product('abc', [1, 2]))
6

