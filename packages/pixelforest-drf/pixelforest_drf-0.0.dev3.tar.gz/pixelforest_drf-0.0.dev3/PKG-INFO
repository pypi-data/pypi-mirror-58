Metadata-Version: 2.1
Name: pixelforest_drf
Version: 0.0.dev3
Summary: A compilation of the applications we often use in addition to Django Rest Framework
Home-page: https://bitbucket.org/pixelforest/pixelforest_drf/
Author: PixelForest Dev Team
Author-email: devteam@pixelforest.io
License: UNKNOWN
Description: PixelForest DRF
        ===============
        
        [![PyPI version](https://badge.fury.io/py/pixelforest-drf.svg)](https://badge.fury.io/py/pixelforest-drf)
        
        This repository host the code of the PixelForest DRF package.
        This package will host most of the reusable applications/code we use on a project basis as the PixelForest Dev Team.
        
        **Note** This package is under public licensing because we figured it might be useful for other as it is.
        
        Current applications
        ====================
        - None
        
        Getting started
        ===============
        
        Requirements
        ------------
        
        The following requirements will need to be installed and configured
        
        - [Python 3.6](https://www.python.org/downloads/release/python-360/)
        - [Django](https://www.djangoproject.com/)
        - [Django Rest Framework](https://www.django-rest-framework.org/)
        - [PostgreSQL](https://www.postgresql.org)
        
        
        Installation
        ------------
        
        You can install the package using pip
        ```bash
            pip install pixelforest_drf
        ```
        
        Add the wanted application(s) to your `INSTALLED_APPS`:
        ```python
        INSTALLED_APPS = (
            ...
            "pixelforest_drf.countries.apps.CountriesConfig",
            ...
        )
        ```
        
        Add the wanted URL patterns:
        ```python
            from pixelforest_drf.countries import urls as countries_urls
        
            urlpatterns = [
                ...
                path('', include(countries_urls)),
                ...
            ]
        ```
        
        Contributing
        ============
        
        Guidelines
        ----------
        Please contact the [PixelForest Dev Team](mailto:devteam@pixelforest.io) for any bug report or feature request.
        
        Development Requirements
        ------------------------
        You will need to install ```setuptools```, ```twine``` and ```wheel```
        ```bash
          pip install setuptools twine wheel
        ```
        
        Add a new subpackage
        --------------------
        To add a new subpackages, first create it under the pixelforest_drf directory.
        The only necessary files are:
         + apps.py (with a properly configured Config)
         + urls.py (with at least an empty urlpatterns list)
         + requirements.txt
        
         To add this application to the global package, you need to modify the test files:
         + tests/settings.py - Add the new application to INSTALLED_APPS
         + tests/urls.py - Add the new application urls to the url_patterns
        
         Also, modify the global requirements.txt to link the requirements from the new package.
        
        Publish to PyPi
        ---------------
        First, generate the new distributions archives
        ```bash
          python setup.py sdist bdist_wheel
        ```
        
        Then, after testing it locally, upload it directly to PyPi. You'll need the credentials of the pixelforest PyPi user for this operation.
        ```bash
          twine upload dist/*
        ```
        
        Contributors
        ------------
        
        **Jean-Xavier Raynaud** - [email](mailto:jx@pixelforest.io) - Product Owner / System Architect / Developer
        
        **Milo Parigi** - [email](mailto:milo@pixelforest.io) - Scrum Master / Developer
        
        **Victor Duvernois** - [email](mailto:victornithorynque@pixelforest.io ) -  Developer
        
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5
Description-Content-Type: text/markdown
