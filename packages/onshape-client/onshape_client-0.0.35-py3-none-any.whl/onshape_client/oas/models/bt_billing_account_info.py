# coding: utf-8

"""
    Onshape REST API

    The Onshape REST API consumed by all clients.  # noqa: E501

    The version of the OpenAPI document: 1.104
    Contact: api-support@onshape.zendesk.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class BTBillingAccountInfo(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'address': 'BTAddressInfo',
        'created_at': 'datetime',
        'card': 'BTCardInfo',
        'account_balance': 'int',
        'state': 'int',
        'company': 'BTCompanyInfo',
        'stripe_id': 'str',
        'pro_monthly_enabled': 'bool',
        'zuora_id': 'str',
        'owner': 'BTUserSummaryInfo',
        'href': 'str',
        'view_ref': 'str',
        'name': 'str',
        'id': 'str'
    }

    attribute_map = {
        'address': 'address',
        'created_at': 'createdAt',
        'card': 'card',
        'account_balance': 'accountBalance',
        'state': 'state',
        'company': 'company',
        'stripe_id': 'stripeId',
        'pro_monthly_enabled': 'proMonthlyEnabled',
        'zuora_id': 'zuoraId',
        'owner': 'owner',
        'href': 'href',
        'view_ref': 'viewRef',
        'name': 'name',
        'id': 'id'
    }

    def __init__(self, address=None, created_at=None, card=None, account_balance=None, state=None, company=None, stripe_id=None, pro_monthly_enabled=None, zuora_id=None, owner=None, href=None, view_ref=None, name=None, id=None):  # noqa: E501
        """BTBillingAccountInfo - a model defined in OpenAPI"""  # noqa: E501

        self._address = None
        self._created_at = None
        self._card = None
        self._account_balance = None
        self._state = None
        self._company = None
        self._stripe_id = None
        self._pro_monthly_enabled = None
        self._zuora_id = None
        self._owner = None
        self._href = None
        self._view_ref = None
        self._name = None
        self._id = None
        self.discriminator = None

        if address is not None:
            self.address = address
        if created_at is not None:
            self.created_at = created_at
        if card is not None:
            self.card = card
        if account_balance is not None:
            self.account_balance = account_balance
        if state is not None:
            self.state = state
        if company is not None:
            self.company = company
        if stripe_id is not None:
            self.stripe_id = stripe_id
        if pro_monthly_enabled is not None:
            self.pro_monthly_enabled = pro_monthly_enabled
        if zuora_id is not None:
            self.zuora_id = zuora_id
        if owner is not None:
            self.owner = owner
        if href is not None:
            self.href = href
        if view_ref is not None:
            self.view_ref = view_ref
        if name is not None:
            self.name = name
        if id is not None:
            self.id = id

    @property
    def address(self):
        """Gets the address of this BTBillingAccountInfo.  # noqa: E501


        :return: The address of this BTBillingAccountInfo.  # noqa: E501
        :rtype: BTAddressInfo
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this BTBillingAccountInfo.


        :param address: The address of this BTBillingAccountInfo.  # noqa: E501
        :type: BTAddressInfo
        """

        self._address = address

    @property
    def created_at(self):
        """Gets the created_at of this BTBillingAccountInfo.  # noqa: E501


        :return: The created_at of this BTBillingAccountInfo.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BTBillingAccountInfo.


        :param created_at: The created_at of this BTBillingAccountInfo.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def card(self):
        """Gets the card of this BTBillingAccountInfo.  # noqa: E501


        :return: The card of this BTBillingAccountInfo.  # noqa: E501
        :rtype: BTCardInfo
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this BTBillingAccountInfo.


        :param card: The card of this BTBillingAccountInfo.  # noqa: E501
        :type: BTCardInfo
        """

        self._card = card

    @property
    def account_balance(self):
        """Gets the account_balance of this BTBillingAccountInfo.  # noqa: E501


        :return: The account_balance of this BTBillingAccountInfo.  # noqa: E501
        :rtype: int
        """
        return self._account_balance

    @account_balance.setter
    def account_balance(self, account_balance):
        """Sets the account_balance of this BTBillingAccountInfo.


        :param account_balance: The account_balance of this BTBillingAccountInfo.  # noqa: E501
        :type: int
        """

        self._account_balance = account_balance

    @property
    def state(self):
        """Gets the state of this BTBillingAccountInfo.  # noqa: E501


        :return: The state of this BTBillingAccountInfo.  # noqa: E501
        :rtype: int
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BTBillingAccountInfo.


        :param state: The state of this BTBillingAccountInfo.  # noqa: E501
        :type: int
        """

        self._state = state

    @property
    def company(self):
        """Gets the company of this BTBillingAccountInfo.  # noqa: E501


        :return: The company of this BTBillingAccountInfo.  # noqa: E501
        :rtype: BTCompanyInfo
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this BTBillingAccountInfo.


        :param company: The company of this BTBillingAccountInfo.  # noqa: E501
        :type: BTCompanyInfo
        """

        self._company = company

    @property
    def stripe_id(self):
        """Gets the stripe_id of this BTBillingAccountInfo.  # noqa: E501


        :return: The stripe_id of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._stripe_id

    @stripe_id.setter
    def stripe_id(self, stripe_id):
        """Sets the stripe_id of this BTBillingAccountInfo.


        :param stripe_id: The stripe_id of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._stripe_id = stripe_id

    @property
    def pro_monthly_enabled(self):
        """Gets the pro_monthly_enabled of this BTBillingAccountInfo.  # noqa: E501


        :return: The pro_monthly_enabled of this BTBillingAccountInfo.  # noqa: E501
        :rtype: bool
        """
        return self._pro_monthly_enabled

    @pro_monthly_enabled.setter
    def pro_monthly_enabled(self, pro_monthly_enabled):
        """Sets the pro_monthly_enabled of this BTBillingAccountInfo.


        :param pro_monthly_enabled: The pro_monthly_enabled of this BTBillingAccountInfo.  # noqa: E501
        :type: bool
        """

        self._pro_monthly_enabled = pro_monthly_enabled

    @property
    def zuora_id(self):
        """Gets the zuora_id of this BTBillingAccountInfo.  # noqa: E501


        :return: The zuora_id of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._zuora_id

    @zuora_id.setter
    def zuora_id(self, zuora_id):
        """Sets the zuora_id of this BTBillingAccountInfo.


        :param zuora_id: The zuora_id of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._zuora_id = zuora_id

    @property
    def owner(self):
        """Gets the owner of this BTBillingAccountInfo.  # noqa: E501


        :return: The owner of this BTBillingAccountInfo.  # noqa: E501
        :rtype: BTUserSummaryInfo
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this BTBillingAccountInfo.


        :param owner: The owner of this BTBillingAccountInfo.  # noqa: E501
        :type: BTUserSummaryInfo
        """

        self._owner = owner

    @property
    def href(self):
        """Gets the href of this BTBillingAccountInfo.  # noqa: E501


        :return: The href of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this BTBillingAccountInfo.


        :param href: The href of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._href = href

    @property
    def view_ref(self):
        """Gets the view_ref of this BTBillingAccountInfo.  # noqa: E501


        :return: The view_ref of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._view_ref

    @view_ref.setter
    def view_ref(self, view_ref):
        """Sets the view_ref of this BTBillingAccountInfo.


        :param view_ref: The view_ref of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._view_ref = view_ref

    @property
    def name(self):
        """Gets the name of this BTBillingAccountInfo.  # noqa: E501


        :return: The name of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BTBillingAccountInfo.


        :param name: The name of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this BTBillingAccountInfo.  # noqa: E501


        :return: The id of this BTBillingAccountInfo.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BTBillingAccountInfo.


        :param id: The id of this BTBillingAccountInfo.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BTBillingAccountInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
