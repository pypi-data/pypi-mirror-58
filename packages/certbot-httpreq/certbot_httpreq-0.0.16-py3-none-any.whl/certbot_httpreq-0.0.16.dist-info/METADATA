Metadata-Version: 2.1
Name: certbot-httpreq
Version: 0.0.16
Summary: certbot-httpreq plugin for certbot client
Home-page: https://github.com/decryptus/certbot-httpreq
Author: Adrien Delle Cave
Author-email: pypi@doowan.net
License: License GPL-3
Platform: UNKNOWN
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Security
Classifier: Topic :: System :: Installation/Setup
Classifier: Topic :: System :: Networking
Classifier: Topic :: System :: Systems Administration
Classifier: Topic :: Terminals
Classifier: Topic :: Utilities
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*
Description-Content-Type: text/markdown
Requires-Dist: acme (>=0.1.1)
Requires-Dist: certbot (>=0.9.3)
Requires-Dist: pyOpenSSL
Requires-Dist: requests (>=2.4)
Requires-Dist: sonicprobe (>=0.3.19)
Requires-Dist: zope.interface

## certbot-httpreq project

[![PyPI pyversions](https://img.shields.io/pypi/pyversions/certbot-httpreq.svg)](https://pypi.org/project/certbot-httpreq/)
[![PyPI version shields.io](https://img.shields.io/pypi/v/certbot-httpreq.svg)](https://pypi.org/project/certbot-httpreq/)
[![Documentation Status](https://readthedocs.org/projects/certbot-httpreq/badge/?version=latest)](https://certbot-httpreq.readthedocs.io/)

certbot-httpreq is a free and open-source, we develop it to customize and send authenticator and installer certbot requests through HTTP protocol.

## Table of contents
1. [Installation](#installation)
2. [Usage](#usage)
3. [Configuration](#configuration)

## <a name="installation"></a>Installation

`pip install certbot-httpreq`

## <a name="usage"></a>Usage

```
certbot \
  --agree-tos \
  --text \
  -a certbot-httpreq:auth \
  -i certbot-httpreq:installer \
  --certbot-httpreq:auth-config /etc/letsencrypt/certbot-httpreq.yml \ # not required
  --certbot-httpreq:installer-config /etc/letsencrypt/certbot-httpreq.yml \ # not required
  run
```

Configuration file must be placed in /etc/letsencrypt/certbot-httpreq.yml or be specified with arguments --certbot-httpreq:auth-config and --certbot-httpreq:installer-config.

## <a name="configuration"></a>Configuration

You can customize authenticator HTTP requests for perform and cleanup phases and also installer HTTP requests for deploy phase.

```
# authenticator
perform:
  ### perform HTTP URI ###
  uri: http://localhost
  ### perform HTTP path ###
  path: /
  ### perform HTTP method: PUT or POST ###
  method: PUT
  ### perform HTTP format: json or form-urlencoded ###
  format: json
  ### parameter name in HTTP query string for challenge string ###
  ### default: HTTP path e.g.: http://localhost/HGr8U1IeTW4kY_Z6UIyaakzOkyQgPr_7ArlLgtZE8SX ###
  param_challenge: ~
  ### parameter name in HTTP body for validation string
  ### default: HTTP json payload e.g.: "gfj9Xq...Rg85nM" ###
  param_validation: ~
  ### perform HTTP custom headers ###
  headers: {}
  ### perform HTTP connection timeout ###
  timeout: ~
  ### perform HTTP SSL verify ###
  verify: ~
cleanup:
  ### cleanup HTTP uri ###
  uri: http://localhost
  ### cleanup HTTP path ###
  path: /
  ### cleanup HTTP method: DELETE, PUT or POST ###
  method: DELETE
  ### cleanup HTTP format: json or form-urlencoded ###
  format: json
  ### parameter name in HTTP query string for challenge string ###
  ### default: HTTP path e.g.: http://localhost/HGr8U1IeTW4kY_Z6UIyaakzOkyQgPr_7ArlLgtZE8SX ###
  param_challenge: ~
  ### cleanup HTTP custom headers ###
  headers: {}
  ### cleanup HTTP connection timeout ###
  timeout: ~
  ### cleanup HTTP SSL verify ###
  verify: ~

# installer
deploy:
  ### deploy HTTP URI ###
  uri: http://localhost
  ### deploy HTTP path ###
  path: /
  ### deploy HTTP method: POST or PUT or PATCH ###
  method: POST
  ### deploy HTTP format: json or form-urlencoded ###
  ### e.g.: HTTP json payload: {"domain":"...","cert":"...","key":"...","chain":"..."} ###
  format: json
  ### deploy HTTP custom headers ###
  headers: {}
  ### deploy HTTP connection timeout ###
  timeout: ~
  ### deploy HTTP SSL verify ###
  verify: ~
```


