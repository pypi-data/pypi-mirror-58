{"version":3,"sources":["webpack:///./src/plugins/lists/entry/types.ts","webpack:///./src/plugins/lists/entry/hooks.tsx","webpack:///./src/plugins/lists/entry/EntryList.tsx"],"names":["SortBy","EntryListContainer","createPluginContainer","sortByOptions","useMemo","value","Added","label","Title","URL","api","list","get","useFlexgetAPI","add","Method","Post","remove","useCallback","listId","Delete","entry","query","entryId","removeBulk","PendingList","Provider","title"],"mappings":"sGAAWA,E,iCACX,SAAWA,GACPA,EAAM,MAAY,QAClBA,EAAM,MAAY,QAClBA,EAAM,IAAU,eAHpB,CAIGA,IAAWA,EAAS,K,aCAVC,EAAqBC,aAAsB,WACpD,MAAO,CACHC,cAAeC,mBAAQ,iBAAM,CACzB,CACIC,MAAOL,EAAOM,MACdC,MAAO,cAEX,CACIF,MAAOL,EAAOQ,MACdD,MAAO,SAEX,CACIF,MAAOL,EAAOS,IACdF,MAAO,UAEZ,IACHG,IAAK,CACDC,KAAM,CACFC,IAAKC,YAAc,eACnBC,IAAKD,YAAc,cAAeE,IAAOC,MACzCC,OAAQJ,YAAcK,uBAAY,SAACC,GAAD,4BAA2BA,KAAU,IAAKJ,IAAOK,SAEvFC,MAAO,CACHT,IAAKC,YAAcK,uBAAY,SAACC,EAAQG,GAAT,4BAAkCH,EAAlC,oBAAoDG,KAAS,KAC5FR,IAAKD,YAAcK,uBAAY,SAACC,GAAD,4BAA2BA,EAA3B,cAA6C,IAAKJ,IAAOC,MACxFC,OAAQJ,YAAcK,uBAAY,SAACC,EAAQI,GAAT,4BAAoCJ,EAApC,oBAAsDI,KAAW,IAAKR,IAAOK,QAC/GI,WAAYX,YAAcK,uBAAY,SAACC,GAAD,4BAA2BA,EAA3B,oBAAmD,IAAKJ,IAAOK,c,OCtBlGK,UALC,WAChB,OAAQ,YAACxB,EAAmByB,SAApB,KACN,YAAC,IAAD,CAAaC,MAAM","file":"13.92f6bef99fcc0abbc846.js","sourcesContent":["export var SortBy;\n(function (SortBy) {\n    SortBy[\"Added\"] = \"added\";\n    SortBy[\"Title\"] = \"title\";\n    SortBy[\"URL\"] = \"original_url\";\n})(SortBy || (SortBy = {}));\n","import { useCallback, useMemo } from 'react';\nimport { useFlexgetAPI } from 'core/api';\nimport { Method } from 'utils/fetch';\nimport { SortBy } from './types';\nimport { createPluginContainer } from '../base/hooks/api';\nexport const EntryListContainer = createPluginContainer(() => {\n    return {\n        sortByOptions: useMemo(() => [\n            {\n                value: SortBy.Added,\n                label: 'Date Added',\n            },\n            {\n                value: SortBy.Title,\n                label: 'Title',\n            },\n            {\n                value: SortBy.URL,\n                label: 'URL',\n            },\n        ], []),\n        api: {\n            list: {\n                get: useFlexgetAPI('/entry_list'),\n                add: useFlexgetAPI('/entry_list', Method.Post),\n                remove: useFlexgetAPI(useCallback((listId) => `/entry_list/${listId}`, []), Method.Delete),\n            },\n            entry: {\n                get: useFlexgetAPI(useCallback((listId, query) => `/entry_list/${listId}/entries?${query}`, [])),\n                add: useFlexgetAPI(useCallback((listId) => `/entry_list/${listId}/entries`, []), Method.Post),\n                remove: useFlexgetAPI(useCallback((listId, entryId) => `/entry_list/${listId}/entries/${entryId}`, []), Method.Delete),\n                removeBulk: useFlexgetAPI(useCallback((listId) => `/entry_list/${listId}/entries/batch`, []), Method.Delete),\n            },\n        },\n    };\n});\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport ManagedList from '../base';\nimport { EntryListContainer } from './hooks';\nconst PendingList = () => {\n    return (<EntryListContainer.Provider>\n      <ManagedList title=\"Entry List\"/>\n    </EntryListContainer.Provider>);\n};\nexport default hot(PendingList);\n"],"sourceRoot":""}