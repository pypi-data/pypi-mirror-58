Metadata-Version: 2.1
Name: guang
Version: 0.0.7.6.6
Summary: Some tools function
Home-page: https://github.com/beidongjiedeguang/guang
Author: K.y
Author-email: beidongjiedeguang@gmail.com
License: GPL-v3
Keywords: Deep Learning,Machine Learning,Neural Networks,Natural Language Processing,Computer Version
Platform: UNKNOWN
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: matplotlib
Requires-Dist: opencv-python
Requires-Dist: pydub
Requires-Dist: librosa
Requires-Dist: pomegranate
Requires-Dist: soundfile
Requires-Dist: pypinyin
Requires-Dist: python-Levenshtein
Requires-Dist: psutil

# Guang

[![image](https://img.shields.io/badge/Pypi-0.0.7.6.6-green.svg)](https://pypi.org/project/guang)
[![image](https://img.shields.io/badge/python-3.X-blue.svg)](https://www.python.org/)
[![image](https://img.shields.io/badge/license-GNU_GPL--v3-blue.svg)](LICENSE)
[![image](https://img.shields.io/badge/author-K.y-orange.svg?style=flat-square&logo=appveyor)](https://github.com/beidongjiedeguang)

$$
a^2 + b^2 = c^2
$$


Scientific calculation of universal function library

## Requirements

```python
Python 3
CUDA >= 10.0
PyTorch >= 1.0
Tensorflow >= 1.12.0
opencv-python
pydub
librosa
pyworld
soundfile
pypinyin
pomegranate
python-Levenshtein
```



## Installation

```python
pip install guang
```

​	*Nightly* Build

```python
pip install git+https://github.com/beidongjiedeguang/guang
```



## Examples

- Convert audio in .mp3/ .wav format to (sample rate=16k, single channel) .wav format

  ```python
  from guang.Voice.convert improt cvt2wav
  cvt2wav(orig_path, target_path, sr=16000)
  ```



* Use `dict_dotable` to convert a dictionary to dot-able dictionary:

  ```python
  from guang.Utils.toolsFunc import dict_dotable
  a = {'a':{'b':1}}
  a = dict_dotable(a)
  print(a.a.b)

  >> 1
  ```



* Use `probar` to display current progress

  ```python
  from guang.Utils.toolsFunc import probar
  for idx, x in probar(range(10)):
      time.sleep(0.8)

  >> 100.00%         0'7.3"|0'7.3"     Expect: 12-2 23:59:8
  ```



* `@broadcast`  broadcast a non-broadcast function.

  ```python
  from guang.Utils.toolsFunc import broadcast

  @broadcast
  def f(x):
      # A function that can map only a single element
      if x==1 or x==0:
          return x
      else:
          return f(x-1)+f(x-2)

  >> f([2,4,10])
  >> array([1, 3, 832040], dtype=object)
  ```



* `txt2ph` Convert Chinese characters to phoneme

  ```python
  from guang.Voice.txt2pinyin import txt2ph
  txt2ph('你好，我是光')

  >> [('n', 'i3'), ('h', 'ao3'), ('sp1',), ('uo3',), ('sh', 'ii4'), ('g', 'uang1')]
  ```











