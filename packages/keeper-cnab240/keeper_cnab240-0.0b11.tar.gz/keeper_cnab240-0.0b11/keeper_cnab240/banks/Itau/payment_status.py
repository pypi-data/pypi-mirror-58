from keeper_cnab240.payment_status import StatusModel


class PaymentStatus:
    ZEROS = StatusModel(True, 'out', 'PAYMENT_CONFIRMED')
    AE = StatusModel(True, 'info', 'PAYMENT_DATE_CHANGED')
    AG = StatusModel(False, 'info', 'INVALID_BATCH_NUMBER')
    AH = StatusModel(False, 'info', 'INVALID_SEQUENCE_NUMBER')
    AI = StatusModel(False, 'info', 'PRODUCT_NOT_HIRED')
    AJ = StatusModel(False, 'info', 'INVALID_MOVEMENT_TYPE')
    AL = StatusModel(False, 'info', 'INVALID_FAVORED_BANK_CODE')
    AM = StatusModel(False, 'info', 'INVALID_FAVORED_AGENCY')
    AN = StatusModel(False, 'info', 'INVALID_FAVORED_ACCIYBT')
    AO = StatusModel(False, 'info', 'INVALID_FAVORED_NAME')
    AP = StatusModel(False, 'info', 'INVALID_PAYMENT_DATE')
    AQ = StatusModel(False, 'info', 'TOO_MANY_ROWS')
    AR = StatusModel(False, 'info', 'INVALID_VALUE')
    BC = StatusModel(False, 'info', 'INVALID_OUR_NUMBER')
    BD = StatusModel(True, 'info', 'PAYMENT_SCHEDULED')
    BE = StatusModel(True, 'info', 'PAYMENT_SCHEDULED_WITH_CHANGE')
    BI = StatusModel(False, 'info', 'INVALID_BENEFICIARY_DOCUMENT_J52_b')
    BL = StatusModel(False, 'info', 'INVALID_PAYMENT_VALUE')
    CD = StatusModel(False, 'info', 'DIVERGENT_DOCUMENT')
    CE = StatusModel(True, 'info', 'PAYMENT_CANCELED')
    CF = StatusModel(False, 'info', 'INVALID_DOCUMENT_VALUE')
    CG = StatusModel(False, 'info', 'INVALID_REBATE_VALUE')
    CH = StatusModel(False, 'info', 'INVALID_DDISCOUNT_VALUE')
    CI = StatusModel(False, 'info', 'INVALID_DOCUMENTO')
    CJ = StatusModel(False, 'info', 'INVALID_FINE_VALUE')
    CK = StatusModel(False, 'info', 'INVALID_INSCRITION_TYPE')
    CL = StatusModel(False, 'info', 'INVALID_INSS_VALUE')
    CM = StatusModel(False, 'info', 'INVALID_COFINS_VALUE')
    CN = StatusModel(False, 'info', 'ACCOUNT_NOT_REGISTERED')
    CO = StatusModel(False, 'info', 'INVALID_OTHER_ENTITIES_VALUE')
    CP = StatusModel(True, 'out', 'OP_CONFIRMATION')
    CQ = StatusModel(False, 'info', 'DIVERGENT_INVOICE_PAYMENTS_SUM')
    CR = StatusModel(False, 'info', 'INVALID_CSLL_VALUE')
    CS = StatusModel(False, 'info', 'INVALID_INVOICE_DUE_DATE')
    DA = StatusModel(False, 'info', 'INVALID_FAMILY_SALARY_NUMBER')
    DB = StatusModel(False, 'info', 'INVALID_WEEKLY_HOURS')
    DC = StatusModel(False, 'info', 'INVALID_INSS_SALARY')
    DD = StatusModel(False, 'info', 'INVALID_FGTS_SALARY')
    DE = StatusModel(False, 'info', 'INVALID_TOTAL_EARNINGS_VALUES')
    DF = StatusModel(False, 'info', 'INVALID_TOTAL_DISCOUNT_VALUES')
    DG = StatusModel(False, 'info', 'NON_NUMERIC_LIQUID_VALUE')
    DH = StatusModel(False, 'info', 'DIVERGENT_LIQUID_VALUE')
    DI = StatusModel(False, 'info', 'INVALID_BASE_SALARY_VALUE')
    DJ = StatusModel(False, 'info', 'INVALID_IRFF_BASE_CALCULATION')
    DK = StatusModel(False, 'info', 'INVALID_FGTS_BASE_CALCULATION')
    DL = StatusModel(False, 'info', 'INVALID_LOOT_PAYMENT_METHOD')
    DM = StatusModel(False, 'info', 'INVALID_FAVORED_EMAIL')
    DV = StatusModel(True, 'revert', 'REVERTED_DOC_TED_FAVORED_BANK')
    D0 = StatusModel(False, 'info', 'INVALID_LOOT_GOAL')
    D1 = StatusModel(False, 'info', 'INVALID_LOOT_COMPETENCE_MONTH')
    D2 = StatusModel(False, 'info', 'INVALID_LOOT_COMPETENCE_DAY')
    D3 = StatusModel(False, 'info', 'INVALID_COST_CENTER')
    D4 = StatusModel(False, 'info', 'INVALID_NUMERIC_FIELD')
    D5 = StatusModel(False, 'info', 'NON_NUMERIC_VACATION_INITIAL_DATE')
    D6 = StatusModel(False, 'info', 'INCONSISTENT_VACATION_INITIAL_DATE')
    D7 = StatusModel(False, 'info', 'NON_NUMERIC_VACATION_END_DATE')
    D8 = StatusModel(False, 'info', 'INCONSISTENT_VACATION_END_DATE')
    D9 = StatusModel(False, 'info', 'INVALID_IR_NUMBER_DEPENDENTS')
    EM = StatusModel(False, 'info', 'OP_EMISSION_CONFIRMATION')
    EX = StatusModel(True, 'revert', 'OP_RETURN_BY_FAVORED')
    E0 = StatusModel(False, 'info', 'INVALID_LOOT_MOVEMENT_TYPE')
    E1 = StatusModel(False, 'info', 'INVALID_LOOT_VALUE_01')
    E2 = StatusModel(False, 'info', 'INVALID_LOOT_VALUE_02')
    E3 = StatusModel(False, 'info', 'INVALID_LOOT_VALUE_03')
    E4 = StatusModel(False, 'info', 'INVALID_LOOT_VALUE_04')
    FC = StatusModel(True, 'out', 'PAYMENT_CONFIRMED_COMPROR')
    FD = StatusModel(True, 'out', 'PAYMENT_CONFIRMED_DESCOMPROR')
    HA = StatusModel(False, 'info', 'ERROR_FILE_HEADER')
    HM = StatusModel(False, 'info', 'ERROR_BATCH_HEADER')
    IB = StatusModel(False, 'info', 'INVALID_DOCUMENT_VALUE_DATE')
    IC = StatusModel(False, 'info', 'INVALID_REBATE_VALUE')
    ID = StatusModel(False, 'info', 'INVALID_DISCOUNT_VALUE')
    IE = StatusModel(False, 'info', 'INVALID_ARREARS_VALUE')
    IF = StatusModel(False, 'info', 'INVALID_FINE_VALUE')
    IG = StatusModel(False, 'info', 'INVALID_DEDUCTION_VALUE')
    IH = StatusModel(False, 'info', 'INVALID_ADDITION_VALUE')
    II = StatusModel(False, 'info', 'INVALID_DUE_DATE')
    IJ = StatusModel(False, 'info', 'INVALID_REFERENCE_PERIOD')
    IK = StatusModel(False, 'info', 'TRIBUTE_NOT_PAYABLE')
    IL = StatusModel(False, 'info', 'INVALID_PAYMENT_CODE')
    IM = StatusModel(False, 'info', 'INCOMPATIBLE_TYPE_FORM')
    IN = StatusModel(False, 'info', 'NOT_REGISTERED_BANK_AGENCY')
    IO = StatusModel(False, 'info', 'INVALID_DAC_VALUE_COMPETENCE')
    IP = StatusModel(False, 'info', 'INVALID_BARCODE_DAC')
    IQ = StatusModel(False, 'info', 'INVALID_TAG_NUMBER')
    IR = StatusModel(True, 'info', 'PAYMENT_CHANGED')
    IS = StatusModel(False, 'info', 'INVALID_CONCESSIONAIRE')
    IT = StatusModel(False, 'info', 'INVALID_TRIBUTE_VALUE')
    IU = StatusModel(False, 'info', 'INVALID_CUMULATIVE_GROSS_INCOME')
    IV = StatusModel(False, 'info', 'INVALID_ORIGIN_DOCUMENT_NUMBER')
    IX = StatusModel(False, 'info', 'INVALID_PRODUCT_CODE')
    LA = StatusModel(True, 'info', 'BATCH_PAYMENT_DATE_CHANGED')
    LC = StatusModel(True, 'revert', 'PAYMENT_BATCH_CANCELED')
    NA = StatusModel(False, 'info', 'PAYMENT_CANCELED_LACK_AUTHORIZATION')
    NB = StatusModel(False, 'info', 'INVALID_TRIBUTE_ID')
    NC = StatusModel(False, 'info', 'INVALID_BASE_YEAR')
    ND = StatusModel(False, 'info', 'INVALID_RENAVAM_CODE')
    NE = StatusModel(False, 'info', 'INVALID_STATE')
    NF = StatusModel(False, 'info', 'INVALID_CITY_CODE')
    NG = StatusModel(False, 'info', 'INVALID_CAR_PLATE')
    NH = StatusModel(False, 'info', 'INVALID_PAYMENT_OPTION')
    NI = StatusModel(False, 'info', 'TRIBUTE_PAID_OR_EXPIRED')
    NR = StatusModel(False, 'info', 'OPERATION_NOT_ACHIEVED')
    PD = StatusModel(False, 'info', 'ACQUISITION_CONFIRMED')
    RJ = StatusModel(False, 'info', 'REJECTED_REGISTRY')
    RS = StatusModel(True, 'info', 'PAYMENT_AVAILABLE')
    SS = StatusModel(False, 'info', 'PAYMENT_CANCELED_LACK_OF_LIMIT')
    TA = StatusModel(False, 'info', 'BATCH_TOTALS_DIVERGENCE')
    TI = StatusModel(False, 'info', 'INVALID_OWNERSHIP')
    X1 = StatusModel(False, 'info', 'INVALID_LAYOUT_010')
    X2 = StatusModel(False, 'info', 'INVALID_INVOICE')
    X3 = StatusModel(False, 'info', 'INVALID_DOCUMENT_IDENTIFIER')
    X4 = StatusModel(False, 'info', 'INVALID_FORM_32')

    def __init__(self, value):
        if not hasattr(self, value):
            raise Exception('PaymentStatus does not contain {}'.format(value))

        self.item = getattr(self, value)

    def get(self):
        return self.item
