Metadata-Version: 1.1
Name: pybullet-planning
Version: 0.1.1
Summary: a suite of utility functions to facilitate robotic planning related research on the pybullet physics simulation engine.
Home-page: https://github.com/yijiangh/pybullet_planning
Author: Caelan Garrett and Yijiang Huang
Author-email: yijiangh@mit.edu
License: MIT license
Description: =================
        pybullet_planning
        =================
        
        
        
        .. Write project description
        
        *pybullet_planning* is a suite of utility functions to facilitate robotic planning related research on the `pybullet <https://github.com/bulletphysics/bullet3>`_ physics simulation engine.
        
        
        Main features
        -------------
        
        * feature
        
        **pybullet_planning** runs on Python 2.5+ and 3.x.
        
        
        Documentation
        -------------
        
        .. Explain how to access documentation: API, examples, etc.
        
        ..
        .. optional sections:
        
        Requirements
        ------------
        
        .. Write requirements instructions here
        
        
        Installation
        ------------
        
        .. Write installation instructions here
        
        
        Contributing
        ------------
        
        Make sure you setup your local development environment correctly:
        
        * Clone the `pybullet_planning <https://github.com/yijiangh/pybullet_planning>`_ repository.
        * Install development dependencies:
        
        ::
        
            pip install -r requirements-dev.txt
        
        **You're ready to start working!**
        
        During development, use tasks on the
        command line to ease recurring operations:
        
        * ``invoke clean``: Clean all generated artifacts.
        * ``invoke check``: Run various code and documentation style checks.
        * ``invoke docs``: Generate documentation.
        * ``invoke test``: Run all tests and checks in one swift command.
        * ``invoke``: Show available tasks.
        
        For more details, check the `Contributor's Guide <CONTRIBUTING.rst>`_.
        
        
        Releasing this project
        ----------------------
        
        .. Write releasing instructions here
        
        
        .. end of optional sections
        ..
        
        Credits
        -------------
        
        This package was initiated by Caelan Garrett <caelan@csail.mit.edu> `@caelan <https://github.com/caelan>`_,
        with some maintainence from Yijiang Huang <yijiangh@mit.edu> `@yijiangh <https://github.com/yijiangh>`_.
        
        
        Changelog
        =========
        
        All notable changes to this project will be documented in this file.
        
        The format is based on `Keep a Changelog <https://keepachangelog.com/en/1.0.0/>`_
        and this project adheres to `Semantic Versioning <https://semver.org/spec/v2.0.0.html>`_.
        
        0.1.1
        ----------
        
        **Fixed**
        
        * Fixed Windows OS "Display not in os.environ" issue in `connect`
        
        
        0.1.0
        ----------
        
        **Added**
        
        * diagnosis collision checking function to help visualizing the collision bodies' information
        * add `workspace_bodies` to the `get_collision_fn` to check collisions with the obstacles specified in a URDF file.
        * move `ik_interface` module from application side to this repo, since it's "universal" for fixed-end robot. Might need to add a separete one for robots with moving base later.
        * enable travis ci unit test, collision_fn well tested
        * `get_floating_body_collision_fn` to check a body without joints's collision. Associated test added.
        * Added `snap_sols` to `kinematics.ik_utils`
        
        **Changed**
        
        * add `extra_disabled_collisions` parameter to `get_collision_fn`, `plan_joint_motion`
        * Changed `get_name` to return name without index if name is not `''`
        
        **Removed**
        
        * `get_collision_diagnosis_fn` removed, integrated into the `get_collision_fn`
        
        **Fixed**
        
        * `utils.numeric_sample.randomize`: `random.shuffle` cannot operate on a `range` in py 3.x. Enforced conversion to `list` to fix it.
        * Fixed `get_collision_fn` to ignore checking between bodies both specified in attachment and obstacles (prioritize its role as attachment)
        
        **Deprecated**
        
        **TODO**
        
        * add body name for bodies from `create_obj`
        
        **Requested features**
        
        * `clone_body` work for bodies from `create_obj`
        
        
        0.0.1
        -------
        
        **Added**
        
        * Initial version
        * Divide the original `utils.py` file into separate modules
        * Modules cycle dependency resolved.
        
        
Keywords: robotic planning,pybullet
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
