Metadata-Version: 2.1
Name: requests_ntlm2
Version: 6.0.2
Summary: This package allows for HTTP NTLM authentication using the requests library.
Home-page: https://github.com/dopstar/requests-ntlm2
Author: Mkhanyisi Madlavana
Author-email: mmadlavana@gmail.com
License: ISC
Download-URL: https://github.com/dopstar/requests-ntlm2/tarball/6.0.2
Description: # requests-ntlm2
        
        [![Build Status](https://travis-ci.org/dopstar/requests-ntlm2.svg?branch=master)](https://travis-ci.org/dopstar/requests-ntlm2)
        [![Python Version](https://img.shields.io/pypi/pyversions/requests-ntlm2.svg)](https://pypi.python.org/pypi/requests-ntlm2)
        [![PyPI Status](https://img.shields.io/pypi/v/requests-ntlm2.svg)](https://pypi.python.org/pypi/requests-ntlm2)
        [![Licence](https://img.shields.io/github/license/dopstar/requests-ntlm2.svg)](https://raw.githubusercontent.com/dopstar/requests-ntlm2/master/LICENSE)
        
        requests-ntlm2, which is based on [requests-ntlm](https://github.com/requests/requests-ntlm) , allows for HTTP NTLM authentication using the requests library.
        
        ## Usage
        
        `HttpNtlmAuth` extends requests `AuthBase`, so usage is simple:
        
        ```python
        import requests
        from requests_ntlm2 import HttpNtlmAuth
        
        auth=HttpNtlmAuth('domain\\username','password')
        requests.get("http://ntlm_protected_site.com", auth=auth)
        ```
        
        `HttpNtlmAuth` can be used in conjunction with a `Session` in order to
        make use of connection pooling. Since NTLM authenticates connections,
        this is more efficient. Otherwise, each request will go through a new
        NTLM challenge-response.
        
        ```python
        import requests
        from requests_ntlm2 import HttpNtlmAuth
        
        session = requests.Session()
        session.auth = HttpNtlmAuth('domain\\username','password')
        session.get('http://ntlm_protected_site.com')
        ```
        
        ## Installation
        
        ```shell
        pip install requests-ntlm2
        ```
        
        ## Requirements
        
        - [requests](https://github.com/kennethreitz/requests/)
        - [ntlm-auth](https://github.com/jborean93/ntlm-auth)
        
Keywords: NTLM,requests,proxy,authorization
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: ISC License (ISCL)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Software Development :: Version Control :: Git
Classifier: Programming Language :: Python :: Implementation :: CPython
Description-Content-Type: text/markdown
Provides-Extra: testing
Provides-Extra: linting
