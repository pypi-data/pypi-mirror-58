# coding: utf-8

"""
    Octopus Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2019.6.7+Branch.tags-2019.6.7.Sha.aa18dc6809953218c66f57eff7d26481d9b23d6a
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from octopus_deploy_swagger_client.models.octopus_package_metadata_mapped_resource import OctopusPackageMetadataMappedResource  # noqa: F401,E501


class PackageFromBuiltInFeedResource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'package_size_bytes': 'int',
        'hash': 'str',
        'nu_get_package_id': 'str',
        'package_id': 'str',
        'nu_get_feed_id': 'str',
        'feed_id': 'str',
        'title': 'str',
        'summary': 'str',
        'version': 'str',
        'description': 'str',
        'published': 'datetime',
        'release_notes': 'str',
        'file_extension': 'str',
        'package_metadata': 'OctopusPackageMetadataMappedResource',
        'last_modified_on': 'datetime',
        'last_modified_by': 'str',
        'links': 'dict(str, str)'
    }

    attribute_map = {
        'id': 'Id',
        'package_size_bytes': 'PackageSizeBytes',
        'hash': 'Hash',
        'nu_get_package_id': 'NuGetPackageId',
        'package_id': 'PackageId',
        'nu_get_feed_id': 'NuGetFeedId',
        'feed_id': 'FeedId',
        'title': 'Title',
        'summary': 'Summary',
        'version': 'Version',
        'description': 'Description',
        'published': 'Published',
        'release_notes': 'ReleaseNotes',
        'file_extension': 'FileExtension',
        'package_metadata': 'PackageMetadata',
        'last_modified_on': 'LastModifiedOn',
        'last_modified_by': 'LastModifiedBy',
        'links': 'Links'
    }

    def __init__(self, id=None, package_size_bytes=None, hash=None, nu_get_package_id=None, package_id=None, nu_get_feed_id=None, feed_id=None, title=None, summary=None, version=None, description=None, published=None, release_notes=None, file_extension=None, package_metadata=None, last_modified_on=None, last_modified_by=None, links=None):  # noqa: E501
        """PackageFromBuiltInFeedResource - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._package_size_bytes = None
        self._hash = None
        self._nu_get_package_id = None
        self._package_id = None
        self._nu_get_feed_id = None
        self._feed_id = None
        self._title = None
        self._summary = None
        self._version = None
        self._description = None
        self._published = None
        self._release_notes = None
        self._file_extension = None
        self._package_metadata = None
        self._last_modified_on = None
        self._last_modified_by = None
        self._links = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if package_size_bytes is not None:
            self.package_size_bytes = package_size_bytes
        if hash is not None:
            self.hash = hash
        if nu_get_package_id is not None:
            self.nu_get_package_id = nu_get_package_id
        if package_id is not None:
            self.package_id = package_id
        if nu_get_feed_id is not None:
            self.nu_get_feed_id = nu_get_feed_id
        if feed_id is not None:
            self.feed_id = feed_id
        if title is not None:
            self.title = title
        if summary is not None:
            self.summary = summary
        if version is not None:
            self.version = version
        if description is not None:
            self.description = description
        if published is not None:
            self.published = published
        if release_notes is not None:
            self.release_notes = release_notes
        if file_extension is not None:
            self.file_extension = file_extension
        if package_metadata is not None:
            self.package_metadata = package_metadata
        if last_modified_on is not None:
            self.last_modified_on = last_modified_on
        if last_modified_by is not None:
            self.last_modified_by = last_modified_by
        if links is not None:
            self.links = links

    @property
    def id(self):
        """Gets the id of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PackageFromBuiltInFeedResource.


        :param id: The id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def package_size_bytes(self):
        """Gets the package_size_bytes of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The package_size_bytes of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: int
        """
        return self._package_size_bytes

    @package_size_bytes.setter
    def package_size_bytes(self, package_size_bytes):
        """Sets the package_size_bytes of this PackageFromBuiltInFeedResource.


        :param package_size_bytes: The package_size_bytes of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: int
        """

        self._package_size_bytes = package_size_bytes

    @property
    def hash(self):
        """Gets the hash of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The hash of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this PackageFromBuiltInFeedResource.


        :param hash: The hash of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._hash = hash

    @property
    def nu_get_package_id(self):
        """Gets the nu_get_package_id of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The nu_get_package_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._nu_get_package_id

    @nu_get_package_id.setter
    def nu_get_package_id(self, nu_get_package_id):
        """Sets the nu_get_package_id of this PackageFromBuiltInFeedResource.


        :param nu_get_package_id: The nu_get_package_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._nu_get_package_id = nu_get_package_id

    @property
    def package_id(self):
        """Gets the package_id of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The package_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id):
        """Sets the package_id of this PackageFromBuiltInFeedResource.


        :param package_id: The package_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._package_id = package_id

    @property
    def nu_get_feed_id(self):
        """Gets the nu_get_feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The nu_get_feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._nu_get_feed_id

    @nu_get_feed_id.setter
    def nu_get_feed_id(self, nu_get_feed_id):
        """Sets the nu_get_feed_id of this PackageFromBuiltInFeedResource.


        :param nu_get_feed_id: The nu_get_feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._nu_get_feed_id = nu_get_feed_id

    @property
    def feed_id(self):
        """Gets the feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this PackageFromBuiltInFeedResource.


        :param feed_id: The feed_id of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._feed_id = feed_id

    @property
    def title(self):
        """Gets the title of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The title of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PackageFromBuiltInFeedResource.


        :param title: The title of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def summary(self):
        """Gets the summary of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The summary of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this PackageFromBuiltInFeedResource.


        :param summary: The summary of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def version(self):
        """Gets the version of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The version of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PackageFromBuiltInFeedResource.


        :param version: The version of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def description(self):
        """Gets the description of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The description of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PackageFromBuiltInFeedResource.


        :param description: The description of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def published(self):
        """Gets the published of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The published of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: datetime
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this PackageFromBuiltInFeedResource.


        :param published: The published of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: datetime
        """

        self._published = published

    @property
    def release_notes(self):
        """Gets the release_notes of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The release_notes of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._release_notes

    @release_notes.setter
    def release_notes(self, release_notes):
        """Sets the release_notes of this PackageFromBuiltInFeedResource.


        :param release_notes: The release_notes of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._release_notes = release_notes

    @property
    def file_extension(self):
        """Gets the file_extension of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The file_extension of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._file_extension

    @file_extension.setter
    def file_extension(self, file_extension):
        """Sets the file_extension of this PackageFromBuiltInFeedResource.


        :param file_extension: The file_extension of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._file_extension = file_extension

    @property
    def package_metadata(self):
        """Gets the package_metadata of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The package_metadata of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: OctopusPackageMetadataMappedResource
        """
        return self._package_metadata

    @package_metadata.setter
    def package_metadata(self, package_metadata):
        """Sets the package_metadata of this PackageFromBuiltInFeedResource.


        :param package_metadata: The package_metadata of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: OctopusPackageMetadataMappedResource
        """

        self._package_metadata = package_metadata

    @property
    def last_modified_on(self):
        """Gets the last_modified_on of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The last_modified_on of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_on

    @last_modified_on.setter
    def last_modified_on(self, last_modified_on):
        """Sets the last_modified_on of this PackageFromBuiltInFeedResource.


        :param last_modified_on: The last_modified_on of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: datetime
        """

        self._last_modified_on = last_modified_on

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The last_modified_by of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this PackageFromBuiltInFeedResource.


        :param last_modified_by: The last_modified_by of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def links(self):
        """Gets the links of this PackageFromBuiltInFeedResource.  # noqa: E501


        :return: The links of this PackageFromBuiltInFeedResource.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PackageFromBuiltInFeedResource.


        :param links: The links of this PackageFromBuiltInFeedResource.  # noqa: E501
        :type: dict(str, str)
        """

        self._links = links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PackageFromBuiltInFeedResource, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PackageFromBuiltInFeedResource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
