# coding: utf-8

"""
    Octopus Server API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2019.6.7+Branch.tags-2019.6.7.Sha.aa18dc6809953218c66f57eff7d26481d9b23d6a
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AzureEnvironmentResource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'display_name': 'str',
        'authentication_endpoint': 'str',
        'resource_manager_endpoint': 'str',
        'graph_endpoint': 'str',
        'management_endpoint': 'str',
        'storage_endpoint_suffix': 'str'
    }

    attribute_map = {
        'name': 'Name',
        'display_name': 'DisplayName',
        'authentication_endpoint': 'AuthenticationEndpoint',
        'resource_manager_endpoint': 'ResourceManagerEndpoint',
        'graph_endpoint': 'GraphEndpoint',
        'management_endpoint': 'ManagementEndpoint',
        'storage_endpoint_suffix': 'StorageEndpointSuffix'
    }

    def __init__(self, name=None, display_name=None, authentication_endpoint=None, resource_manager_endpoint=None, graph_endpoint=None, management_endpoint=None, storage_endpoint_suffix=None):  # noqa: E501
        """AzureEnvironmentResource - a model defined in Swagger"""  # noqa: E501

        self._name = None
        self._display_name = None
        self._authentication_endpoint = None
        self._resource_manager_endpoint = None
        self._graph_endpoint = None
        self._management_endpoint = None
        self._storage_endpoint_suffix = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if display_name is not None:
            self.display_name = display_name
        if authentication_endpoint is not None:
            self.authentication_endpoint = authentication_endpoint
        if resource_manager_endpoint is not None:
            self.resource_manager_endpoint = resource_manager_endpoint
        if graph_endpoint is not None:
            self.graph_endpoint = graph_endpoint
        if management_endpoint is not None:
            self.management_endpoint = management_endpoint
        if storage_endpoint_suffix is not None:
            self.storage_endpoint_suffix = storage_endpoint_suffix

    @property
    def name(self):
        """Gets the name of this AzureEnvironmentResource.  # noqa: E501


        :return: The name of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AzureEnvironmentResource.


        :param name: The name of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def display_name(self):
        """Gets the display_name of this AzureEnvironmentResource.  # noqa: E501


        :return: The display_name of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AzureEnvironmentResource.


        :param display_name: The display_name of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def authentication_endpoint(self):
        """Gets the authentication_endpoint of this AzureEnvironmentResource.  # noqa: E501


        :return: The authentication_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._authentication_endpoint

    @authentication_endpoint.setter
    def authentication_endpoint(self, authentication_endpoint):
        """Sets the authentication_endpoint of this AzureEnvironmentResource.


        :param authentication_endpoint: The authentication_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._authentication_endpoint = authentication_endpoint

    @property
    def resource_manager_endpoint(self):
        """Gets the resource_manager_endpoint of this AzureEnvironmentResource.  # noqa: E501


        :return: The resource_manager_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._resource_manager_endpoint

    @resource_manager_endpoint.setter
    def resource_manager_endpoint(self, resource_manager_endpoint):
        """Sets the resource_manager_endpoint of this AzureEnvironmentResource.


        :param resource_manager_endpoint: The resource_manager_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._resource_manager_endpoint = resource_manager_endpoint

    @property
    def graph_endpoint(self):
        """Gets the graph_endpoint of this AzureEnvironmentResource.  # noqa: E501


        :return: The graph_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._graph_endpoint

    @graph_endpoint.setter
    def graph_endpoint(self, graph_endpoint):
        """Sets the graph_endpoint of this AzureEnvironmentResource.


        :param graph_endpoint: The graph_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._graph_endpoint = graph_endpoint

    @property
    def management_endpoint(self):
        """Gets the management_endpoint of this AzureEnvironmentResource.  # noqa: E501


        :return: The management_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._management_endpoint

    @management_endpoint.setter
    def management_endpoint(self, management_endpoint):
        """Sets the management_endpoint of this AzureEnvironmentResource.


        :param management_endpoint: The management_endpoint of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._management_endpoint = management_endpoint

    @property
    def storage_endpoint_suffix(self):
        """Gets the storage_endpoint_suffix of this AzureEnvironmentResource.  # noqa: E501


        :return: The storage_endpoint_suffix of this AzureEnvironmentResource.  # noqa: E501
        :rtype: str
        """
        return self._storage_endpoint_suffix

    @storage_endpoint_suffix.setter
    def storage_endpoint_suffix(self, storage_endpoint_suffix):
        """Sets the storage_endpoint_suffix of this AzureEnvironmentResource.


        :param storage_endpoint_suffix: The storage_endpoint_suffix of this AzureEnvironmentResource.  # noqa: E501
        :type: str
        """

        self._storage_endpoint_suffix = storage_endpoint_suffix

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AzureEnvironmentResource, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AzureEnvironmentResource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
