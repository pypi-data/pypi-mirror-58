# coding: utf-8

"""
    KountRISSwaggerV02

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ris_response': 'str',
        'ris_vers': 'str',
        'ris_mode': 'str',
        'ris_merc': 'str',
        'ris_sess': 'str',
        'ris_ordr': 'str',
        'ris_auto': 'str',
        'ris_scor': 'str',
        'ris_geox': 'str',
        'ris_brnd': 'str',
        'ris_regn': 'str',
        'ris_netw': 'str',
        'ris_kapt': 'str',
        'ris_cards': 'str',
        'ris_devices': 'str',
        'ris_emails': 'str',
        'ris_velo': 'str',
        'ris_vmax': 'str',
        'ris_site': 'str',
        'ris_device_layers': 'str',
        'ris_fingerprint': 'str',
        'ris_timezone': 'str',
        'ris_localtime': 'str',
        'ris_region': 'str',
        'ris_country': 'str',
        'ris_proxy': 'str',
        'ris_javascript': 'str',
        'ris_flash': 'str',
        'ris_cookies': 'str',
        'ris_http_country': 'str',
        'ris_language': 'str',
        'ris_mobile_device': 'str',
        'ris_mobile_type': 'str',
        'ris_mobile_forwarder': 'str',
        'ris_voice_device': 'str',
        'ris_pc_remote': 'str',
        'ris_rules_triggered': 'str',
        'ris_counters_triggered': 'str',
        'ris_reason_code': 'str',
        'ris_ddfs': 'str',
        'ris_dsr': 'str',
        'ris_uas': 'str',
        'ris_browser': 'str',
        'ris_os': 'str',
        'ris_pip_ipad': 'str',
        'ris_pip_lat': 'str',
        'ris_pip_lon': 'str',
        'ris_pip_country': 'str',
        'ris_pip_region': 'str',
        'ris_pip_city': 'str',
        'ris_pip_org': 'str',
        'ris_ip_ipad': 'str',
        'ris_ip_lat': 'str',
        'ris_ip_lon': 'str',
        'ris_ip_country': 'str',
        'ris_ip_region': 'str',
        'ris_ip_city': 'str',
        'ris_ip_org': 'str',
        'ris_warning_count': 'str'
    }

    attribute_map = {
        'ris_response': 'RisResponse',
        'ris_vers': 'risVERS',
        'ris_mode': 'risMODE',
        'ris_merc': 'risMERC',
        'ris_sess': 'risSESS',
        'ris_ordr': 'risORDR',
        'ris_auto': 'risAUTO',
        'ris_scor': 'risSCOR',
        'ris_geox': 'risGEOX',
        'ris_brnd': 'risBRND',
        'ris_regn': 'risREGN',
        'ris_netw': 'risNETW',
        'ris_kapt': 'risKAPT',
        'ris_cards': 'risCARDS',
        'ris_devices': 'risDEVICES',
        'ris_emails': 'risEMAILS',
        'ris_velo': 'risVELO',
        'ris_vmax': 'risVMAX',
        'ris_site': 'risSITE',
        'ris_device_layers': 'risDEVICE_LAYERS',
        'ris_fingerprint': 'risFINGERPRINT',
        'ris_timezone': 'risTIMEZONE',
        'ris_localtime': 'risLOCALTIME',
        'ris_region': 'risREGION',
        'ris_country': 'risCOUNTRY',
        'ris_proxy': 'risPROXY',
        'ris_javascript': 'risJAVASCRIPT',
        'ris_flash': 'risFLASH',
        'ris_cookies': 'risCOOKIES',
        'ris_http_country': 'risHTTP_COUNTRY',
        'ris_language': 'risLANGUAGE',
        'ris_mobile_device': 'risMOBILE_DEVICE',
        'ris_mobile_type': 'risMOBILE_TYPE',
        'ris_mobile_forwarder': 'risMOBILE_FORWARDER',
        'ris_voice_device': 'risVOICE_DEVICE',
        'ris_pc_remote': 'risPC_REMOTE',
        'ris_rules_triggered': 'risRULES_TRIGGERED',
        'ris_counters_triggered': 'risCOUNTERS_TRIGGERED',
        'ris_reason_code': 'risREASON_CODE',
        'ris_ddfs': 'risDDFS',
        'ris_dsr': 'risDSR',
        'ris_uas': 'risUAS',
        'ris_browser': 'risBROWSER',
        'ris_os': 'risOS',
        'ris_pip_ipad': 'risPIP_IPAD',
        'ris_pip_lat': 'risPIP_LAT',
        'ris_pip_lon': 'risPIP_LON',
        'ris_pip_country': 'risPIP_COUNTRY',
        'ris_pip_region': 'risPIP_REGION',
        'ris_pip_city': 'risPIP_CITY',
        'ris_pip_org': 'risPIP_ORG',
        'ris_ip_ipad': 'risIP_IPAD',
        'ris_ip_lat': 'risIP_LAT',
        'ris_ip_lon': 'risIP_LON',
        'ris_ip_country': 'risIP_COUNTRY',
        'ris_ip_region': 'risIP_REGION',
        'ris_ip_city': 'risIP_CITY',
        'ris_ip_org': 'risIP_ORG',
        'ris_warning_count': 'risWARNING_COUNT'
    }

    def __init__(self, ris_response=None, ris_vers=None, ris_mode=None, ris_merc=None, ris_sess=None, ris_ordr=None, ris_auto=None, ris_scor=None, ris_geox=None, ris_brnd=None, ris_regn=None, ris_netw=None, ris_kapt=None, ris_cards=None, ris_devices=None, ris_emails=None, ris_velo=None, ris_vmax=None, ris_site=None, ris_device_layers=None, ris_fingerprint=None, ris_timezone=None, ris_localtime=None, ris_region=None, ris_country=None, ris_proxy=None, ris_javascript=None, ris_flash=None, ris_cookies=None, ris_http_country=None, ris_language=None, ris_mobile_device=None, ris_mobile_type=None, ris_mobile_forwarder=None, ris_voice_device=None, ris_pc_remote=None, ris_rules_triggered=None, ris_counters_triggered=None, ris_reason_code=None, ris_ddfs=None, ris_dsr=None, ris_uas=None, ris_browser=None, ris_os=None, ris_pip_ipad=None, ris_pip_lat=None, ris_pip_lon=None, ris_pip_country=None, ris_pip_region=None, ris_pip_city=None, ris_pip_org=None, ris_ip_ipad=None, ris_ip_lat=None, ris_ip_lon=None, ris_ip_country=None, ris_ip_region=None, ris_ip_city=None, ris_ip_org=None, ris_warning_count=None):  # noqa: E501
        """ResponseModel - a model defined in Swagger"""  # noqa: E501

        self._ris_response = None
        self._ris_vers = None
        self._ris_mode = None
        self._ris_merc = None
        self._ris_sess = None
        self._ris_ordr = None
        self._ris_auto = None
        self._ris_scor = None
        self._ris_geox = None
        self._ris_brnd = None
        self._ris_regn = None
        self._ris_netw = None
        self._ris_kapt = None
        self._ris_cards = None
        self._ris_devices = None
        self._ris_emails = None
        self._ris_velo = None
        self._ris_vmax = None
        self._ris_site = None
        self._ris_device_layers = None
        self._ris_fingerprint = None
        self._ris_timezone = None
        self._ris_localtime = None
        self._ris_region = None
        self._ris_country = None
        self._ris_proxy = None
        self._ris_javascript = None
        self._ris_flash = None
        self._ris_cookies = None
        self._ris_http_country = None
        self._ris_language = None
        self._ris_mobile_device = None
        self._ris_mobile_type = None
        self._ris_mobile_forwarder = None
        self._ris_voice_device = None
        self._ris_pc_remote = None
        self._ris_rules_triggered = None
        self._ris_counters_triggered = None
        self._ris_reason_code = None
        self._ris_ddfs = None
        self._ris_dsr = None
        self._ris_uas = None
        self._ris_browser = None
        self._ris_os = None
        self._ris_pip_ipad = None
        self._ris_pip_lat = None
        self._ris_pip_lon = None
        self._ris_pip_country = None
        self._ris_pip_region = None
        self._ris_pip_city = None
        self._ris_pip_org = None
        self._ris_ip_ipad = None
        self._ris_ip_lat = None
        self._ris_ip_lon = None
        self._ris_ip_country = None
        self._ris_ip_region = None
        self._ris_ip_city = None
        self._ris_ip_org = None
        self._ris_warning_count = None
        self.discriminator = None

        if ris_response is not None:
            self.ris_response = ris_response
        if ris_vers is not None:
            self.ris_vers = ris_vers
        if ris_mode is not None:
            self.ris_mode = ris_mode
        if ris_merc is not None:
            self.ris_merc = ris_merc
        if ris_sess is not None:
            self.ris_sess = ris_sess
        if ris_ordr is not None:
            self.ris_ordr = ris_ordr
        if ris_auto is not None:
            self.ris_auto = ris_auto
        if ris_scor is not None:
            self.ris_scor = ris_scor
        if ris_geox is not None:
            self.ris_geox = ris_geox
        if ris_brnd is not None:
            self.ris_brnd = ris_brnd
        if ris_regn is not None:
            self.ris_regn = ris_regn
        if ris_netw is not None:
            self.ris_netw = ris_netw
        if ris_kapt is not None:
            self.ris_kapt = ris_kapt
        if ris_cards is not None:
            self.ris_cards = ris_cards
        if ris_devices is not None:
            self.ris_devices = ris_devices
        if ris_emails is not None:
            self.ris_emails = ris_emails
        if ris_velo is not None:
            self.ris_velo = ris_velo
        if ris_vmax is not None:
            self.ris_vmax = ris_vmax
        if ris_site is not None:
            self.ris_site = ris_site
        if ris_device_layers is not None:
            self.ris_device_layers = ris_device_layers
        if ris_fingerprint is not None:
            self.ris_fingerprint = ris_fingerprint
        if ris_timezone is not None:
            self.ris_timezone = ris_timezone
        if ris_localtime is not None:
            self.ris_localtime = ris_localtime
        if ris_region is not None:
            self.ris_region = ris_region
        if ris_country is not None:
            self.ris_country = ris_country
        if ris_proxy is not None:
            self.ris_proxy = ris_proxy
        if ris_javascript is not None:
            self.ris_javascript = ris_javascript
        if ris_flash is not None:
            self.ris_flash = ris_flash
        if ris_cookies is not None:
            self.ris_cookies = ris_cookies
        if ris_http_country is not None:
            self.ris_http_country = ris_http_country
        if ris_language is not None:
            self.ris_language = ris_language
        if ris_mobile_device is not None:
            self.ris_mobile_device = ris_mobile_device
        if ris_mobile_type is not None:
            self.ris_mobile_type = ris_mobile_type
        if ris_mobile_forwarder is not None:
            self.ris_mobile_forwarder = ris_mobile_forwarder
        if ris_voice_device is not None:
            self.ris_voice_device = ris_voice_device
        if ris_pc_remote is not None:
            self.ris_pc_remote = ris_pc_remote
        if ris_rules_triggered is not None:
            self.ris_rules_triggered = ris_rules_triggered
        if ris_counters_triggered is not None:
            self.ris_counters_triggered = ris_counters_triggered
        if ris_reason_code is not None:
            self.ris_reason_code = ris_reason_code
        if ris_ddfs is not None:
            self.ris_ddfs = ris_ddfs
        if ris_dsr is not None:
            self.ris_dsr = ris_dsr
        if ris_uas is not None:
            self.ris_uas = ris_uas
        if ris_browser is not None:
            self.ris_browser = ris_browser
        if ris_os is not None:
            self.ris_os = ris_os
        if ris_pip_ipad is not None:
            self.ris_pip_ipad = ris_pip_ipad
        if ris_pip_lat is not None:
            self.ris_pip_lat = ris_pip_lat
        if ris_pip_lon is not None:
            self.ris_pip_lon = ris_pip_lon
        if ris_pip_country is not None:
            self.ris_pip_country = ris_pip_country
        if ris_pip_region is not None:
            self.ris_pip_region = ris_pip_region
        if ris_pip_city is not None:
            self.ris_pip_city = ris_pip_city
        if ris_pip_org is not None:
            self.ris_pip_org = ris_pip_org
        if ris_ip_ipad is not None:
            self.ris_ip_ipad = ris_ip_ipad
        if ris_ip_lat is not None:
            self.ris_ip_lat = ris_ip_lat
        if ris_ip_lon is not None:
            self.ris_ip_lon = ris_ip_lon
        if ris_ip_country is not None:
            self.ris_ip_country = ris_ip_country
        if ris_ip_region is not None:
            self.ris_ip_region = ris_ip_region
        if ris_ip_city is not None:
            self.ris_ip_city = ris_ip_city
        if ris_ip_org is not None:
            self.ris_ip_org = ris_ip_org
        if ris_warning_count is not None:
            self.ris_warning_count = ris_warning_count

    @property
    def ris_response(self):
        """Gets the ris_response of this ResponseModel.  # noqa: E501


        :return: The ris_response of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_response

    @ris_response.setter
    def ris_response(self, ris_response):
        """Sets the ris_response of this ResponseModel.


        :param ris_response: The ris_response of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_response = ris_response

    @property
    def ris_vers(self):
        """Gets the ris_vers of this ResponseModel.  # noqa: E501


        :return: The ris_vers of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_vers

    @ris_vers.setter
    def ris_vers(self, ris_vers):
        """Sets the ris_vers of this ResponseModel.


        :param ris_vers: The ris_vers of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_vers = ris_vers

    @property
    def ris_mode(self):
        """Gets the ris_mode of this ResponseModel.  # noqa: E501


        :return: The ris_mode of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mode

    @ris_mode.setter
    def ris_mode(self, ris_mode):
        """Sets the ris_mode of this ResponseModel.


        :param ris_mode: The ris_mode of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mode = ris_mode

    @property
    def ris_merc(self):
        """Gets the ris_merc of this ResponseModel.  # noqa: E501


        :return: The ris_merc of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_merc

    @ris_merc.setter
    def ris_merc(self, ris_merc):
        """Sets the ris_merc of this ResponseModel.


        :param ris_merc: The ris_merc of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_merc = ris_merc

    @property
    def ris_sess(self):
        """Gets the ris_sess of this ResponseModel.  # noqa: E501


        :return: The ris_sess of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_sess

    @ris_sess.setter
    def ris_sess(self, ris_sess):
        """Sets the ris_sess of this ResponseModel.


        :param ris_sess: The ris_sess of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_sess = ris_sess

    @property
    def ris_ordr(self):
        """Gets the ris_ordr of this ResponseModel.  # noqa: E501


        :return: The ris_ordr of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ordr

    @ris_ordr.setter
    def ris_ordr(self, ris_ordr):
        """Sets the ris_ordr of this ResponseModel.


        :param ris_ordr: The ris_ordr of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ordr = ris_ordr

    @property
    def ris_auto(self):
        """Gets the ris_auto of this ResponseModel.  # noqa: E501


        :return: The ris_auto of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_auto

    @ris_auto.setter
    def ris_auto(self, ris_auto):
        """Sets the ris_auto of this ResponseModel.


        :param ris_auto: The ris_auto of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_auto = ris_auto

    @property
    def ris_scor(self):
        """Gets the ris_scor of this ResponseModel.  # noqa: E501


        :return: The ris_scor of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_scor

    @ris_scor.setter
    def ris_scor(self, ris_scor):
        """Sets the ris_scor of this ResponseModel.


        :param ris_scor: The ris_scor of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_scor = ris_scor

    @property
    def ris_geox(self):
        """Gets the ris_geox of this ResponseModel.  # noqa: E501


        :return: The ris_geox of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_geox

    @ris_geox.setter
    def ris_geox(self, ris_geox):
        """Sets the ris_geox of this ResponseModel.


        :param ris_geox: The ris_geox of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_geox = ris_geox

    @property
    def ris_brnd(self):
        """Gets the ris_brnd of this ResponseModel.  # noqa: E501


        :return: The ris_brnd of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_brnd

    @ris_brnd.setter
    def ris_brnd(self, ris_brnd):
        """Sets the ris_brnd of this ResponseModel.


        :param ris_brnd: The ris_brnd of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_brnd = ris_brnd

    @property
    def ris_regn(self):
        """Gets the ris_regn of this ResponseModel.  # noqa: E501


        :return: The ris_regn of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_regn

    @ris_regn.setter
    def ris_regn(self, ris_regn):
        """Sets the ris_regn of this ResponseModel.


        :param ris_regn: The ris_regn of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_regn = ris_regn

    @property
    def ris_netw(self):
        """Gets the ris_netw of this ResponseModel.  # noqa: E501


        :return: The ris_netw of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_netw

    @ris_netw.setter
    def ris_netw(self, ris_netw):
        """Sets the ris_netw of this ResponseModel.


        :param ris_netw: The ris_netw of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_netw = ris_netw

    @property
    def ris_kapt(self):
        """Gets the ris_kapt of this ResponseModel.  # noqa: E501


        :return: The ris_kapt of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_kapt

    @ris_kapt.setter
    def ris_kapt(self, ris_kapt):
        """Sets the ris_kapt of this ResponseModel.


        :param ris_kapt: The ris_kapt of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_kapt = ris_kapt

    @property
    def ris_cards(self):
        """Gets the ris_cards of this ResponseModel.  # noqa: E501


        :return: The ris_cards of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_cards

    @ris_cards.setter
    def ris_cards(self, ris_cards):
        """Sets the ris_cards of this ResponseModel.


        :param ris_cards: The ris_cards of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_cards = ris_cards

    @property
    def ris_devices(self):
        """Gets the ris_devices of this ResponseModel.  # noqa: E501


        :return: The ris_devices of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_devices

    @ris_devices.setter
    def ris_devices(self, ris_devices):
        """Sets the ris_devices of this ResponseModel.


        :param ris_devices: The ris_devices of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_devices = ris_devices

    @property
    def ris_emails(self):
        """Gets the ris_emails of this ResponseModel.  # noqa: E501


        :return: The ris_emails of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_emails

    @ris_emails.setter
    def ris_emails(self, ris_emails):
        """Sets the ris_emails of this ResponseModel.


        :param ris_emails: The ris_emails of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_emails = ris_emails

    @property
    def ris_velo(self):
        """Gets the ris_velo of this ResponseModel.  # noqa: E501


        :return: The ris_velo of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_velo

    @ris_velo.setter
    def ris_velo(self, ris_velo):
        """Sets the ris_velo of this ResponseModel.


        :param ris_velo: The ris_velo of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_velo = ris_velo

    @property
    def ris_vmax(self):
        """Gets the ris_vmax of this ResponseModel.  # noqa: E501


        :return: The ris_vmax of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_vmax

    @ris_vmax.setter
    def ris_vmax(self, ris_vmax):
        """Sets the ris_vmax of this ResponseModel.


        :param ris_vmax: The ris_vmax of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_vmax = ris_vmax

    @property
    def ris_site(self):
        """Gets the ris_site of this ResponseModel.  # noqa: E501


        :return: The ris_site of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_site

    @ris_site.setter
    def ris_site(self, ris_site):
        """Sets the ris_site of this ResponseModel.


        :param ris_site: The ris_site of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_site = ris_site

    @property
    def ris_device_layers(self):
        """Gets the ris_device_layers of this ResponseModel.  # noqa: E501


        :return: The ris_device_layers of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_device_layers

    @ris_device_layers.setter
    def ris_device_layers(self, ris_device_layers):
        """Sets the ris_device_layers of this ResponseModel.


        :param ris_device_layers: The ris_device_layers of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_device_layers = ris_device_layers

    @property
    def ris_fingerprint(self):
        """Gets the ris_fingerprint of this ResponseModel.  # noqa: E501


        :return: The ris_fingerprint of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_fingerprint

    @ris_fingerprint.setter
    def ris_fingerprint(self, ris_fingerprint):
        """Sets the ris_fingerprint of this ResponseModel.


        :param ris_fingerprint: The ris_fingerprint of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_fingerprint = ris_fingerprint

    @property
    def ris_timezone(self):
        """Gets the ris_timezone of this ResponseModel.  # noqa: E501


        :return: The ris_timezone of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_timezone

    @ris_timezone.setter
    def ris_timezone(self, ris_timezone):
        """Sets the ris_timezone of this ResponseModel.


        :param ris_timezone: The ris_timezone of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_timezone = ris_timezone

    @property
    def ris_localtime(self):
        """Gets the ris_localtime of this ResponseModel.  # noqa: E501


        :return: The ris_localtime of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_localtime

    @ris_localtime.setter
    def ris_localtime(self, ris_localtime):
        """Sets the ris_localtime of this ResponseModel.


        :param ris_localtime: The ris_localtime of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_localtime = ris_localtime

    @property
    def ris_region(self):
        """Gets the ris_region of this ResponseModel.  # noqa: E501


        :return: The ris_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_region

    @ris_region.setter
    def ris_region(self, ris_region):
        """Sets the ris_region of this ResponseModel.


        :param ris_region: The ris_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_region = ris_region

    @property
    def ris_country(self):
        """Gets the ris_country of this ResponseModel.  # noqa: E501


        :return: The ris_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_country

    @ris_country.setter
    def ris_country(self, ris_country):
        """Sets the ris_country of this ResponseModel.


        :param ris_country: The ris_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_country = ris_country

    @property
    def ris_proxy(self):
        """Gets the ris_proxy of this ResponseModel.  # noqa: E501


        :return: The ris_proxy of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_proxy

    @ris_proxy.setter
    def ris_proxy(self, ris_proxy):
        """Sets the ris_proxy of this ResponseModel.


        :param ris_proxy: The ris_proxy of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_proxy = ris_proxy

    @property
    def ris_javascript(self):
        """Gets the ris_javascript of this ResponseModel.  # noqa: E501


        :return: The ris_javascript of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_javascript

    @ris_javascript.setter
    def ris_javascript(self, ris_javascript):
        """Sets the ris_javascript of this ResponseModel.


        :param ris_javascript: The ris_javascript of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_javascript = ris_javascript

    @property
    def ris_flash(self):
        """Gets the ris_flash of this ResponseModel.  # noqa: E501


        :return: The ris_flash of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_flash

    @ris_flash.setter
    def ris_flash(self, ris_flash):
        """Sets the ris_flash of this ResponseModel.


        :param ris_flash: The ris_flash of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_flash = ris_flash

    @property
    def ris_cookies(self):
        """Gets the ris_cookies of this ResponseModel.  # noqa: E501


        :return: The ris_cookies of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_cookies

    @ris_cookies.setter
    def ris_cookies(self, ris_cookies):
        """Sets the ris_cookies of this ResponseModel.


        :param ris_cookies: The ris_cookies of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_cookies = ris_cookies

    @property
    def ris_http_country(self):
        """Gets the ris_http_country of this ResponseModel.  # noqa: E501


        :return: The ris_http_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_http_country

    @ris_http_country.setter
    def ris_http_country(self, ris_http_country):
        """Sets the ris_http_country of this ResponseModel.


        :param ris_http_country: The ris_http_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_http_country = ris_http_country

    @property
    def ris_language(self):
        """Gets the ris_language of this ResponseModel.  # noqa: E501


        :return: The ris_language of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_language

    @ris_language.setter
    def ris_language(self, ris_language):
        """Sets the ris_language of this ResponseModel.


        :param ris_language: The ris_language of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_language = ris_language

    @property
    def ris_mobile_device(self):
        """Gets the ris_mobile_device of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_device of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_device

    @ris_mobile_device.setter
    def ris_mobile_device(self, ris_mobile_device):
        """Sets the ris_mobile_device of this ResponseModel.


        :param ris_mobile_device: The ris_mobile_device of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_device = ris_mobile_device

    @property
    def ris_mobile_type(self):
        """Gets the ris_mobile_type of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_type of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_type

    @ris_mobile_type.setter
    def ris_mobile_type(self, ris_mobile_type):
        """Sets the ris_mobile_type of this ResponseModel.


        :param ris_mobile_type: The ris_mobile_type of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_type = ris_mobile_type

    @property
    def ris_mobile_forwarder(self):
        """Gets the ris_mobile_forwarder of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_forwarder of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_forwarder

    @ris_mobile_forwarder.setter
    def ris_mobile_forwarder(self, ris_mobile_forwarder):
        """Sets the ris_mobile_forwarder of this ResponseModel.


        :param ris_mobile_forwarder: The ris_mobile_forwarder of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_forwarder = ris_mobile_forwarder

    @property
    def ris_voice_device(self):
        """Gets the ris_voice_device of this ResponseModel.  # noqa: E501


        :return: The ris_voice_device of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_voice_device

    @ris_voice_device.setter
    def ris_voice_device(self, ris_voice_device):
        """Sets the ris_voice_device of this ResponseModel.


        :param ris_voice_device: The ris_voice_device of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_voice_device = ris_voice_device

    @property
    def ris_pc_remote(self):
        """Gets the ris_pc_remote of this ResponseModel.  # noqa: E501


        :return: The ris_pc_remote of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pc_remote

    @ris_pc_remote.setter
    def ris_pc_remote(self, ris_pc_remote):
        """Sets the ris_pc_remote of this ResponseModel.


        :param ris_pc_remote: The ris_pc_remote of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pc_remote = ris_pc_remote

    @property
    def ris_rules_triggered(self):
        """Gets the ris_rules_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_rules_triggered of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_rules_triggered

    @ris_rules_triggered.setter
    def ris_rules_triggered(self, ris_rules_triggered):
        """Sets the ris_rules_triggered of this ResponseModel.


        :param ris_rules_triggered: The ris_rules_triggered of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_rules_triggered = ris_rules_triggered

    @property
    def ris_counters_triggered(self):
        """Gets the ris_counters_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_counters_triggered of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_counters_triggered

    @ris_counters_triggered.setter
    def ris_counters_triggered(self, ris_counters_triggered):
        """Sets the ris_counters_triggered of this ResponseModel.


        :param ris_counters_triggered: The ris_counters_triggered of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_counters_triggered = ris_counters_triggered

    @property
    def ris_reason_code(self):
        """Gets the ris_reason_code of this ResponseModel.  # noqa: E501


        :return: The ris_reason_code of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_reason_code

    @ris_reason_code.setter
    def ris_reason_code(self, ris_reason_code):
        """Sets the ris_reason_code of this ResponseModel.


        :param ris_reason_code: The ris_reason_code of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_reason_code = ris_reason_code

    @property
    def ris_ddfs(self):
        """Gets the ris_ddfs of this ResponseModel.  # noqa: E501


        :return: The ris_ddfs of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ddfs

    @ris_ddfs.setter
    def ris_ddfs(self, ris_ddfs):
        """Sets the ris_ddfs of this ResponseModel.


        :param ris_ddfs: The ris_ddfs of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ddfs = ris_ddfs

    @property
    def ris_dsr(self):
        """Gets the ris_dsr of this ResponseModel.  # noqa: E501


        :return: The ris_dsr of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_dsr

    @ris_dsr.setter
    def ris_dsr(self, ris_dsr):
        """Sets the ris_dsr of this ResponseModel.


        :param ris_dsr: The ris_dsr of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_dsr = ris_dsr

    @property
    def ris_uas(self):
        """Gets the ris_uas of this ResponseModel.  # noqa: E501


        :return: The ris_uas of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_uas

    @ris_uas.setter
    def ris_uas(self, ris_uas):
        """Sets the ris_uas of this ResponseModel.


        :param ris_uas: The ris_uas of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_uas = ris_uas

    @property
    def ris_browser(self):
        """Gets the ris_browser of this ResponseModel.  # noqa: E501


        :return: The ris_browser of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_browser

    @ris_browser.setter
    def ris_browser(self, ris_browser):
        """Sets the ris_browser of this ResponseModel.


        :param ris_browser: The ris_browser of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_browser = ris_browser

    @property
    def ris_os(self):
        """Gets the ris_os of this ResponseModel.  # noqa: E501


        :return: The ris_os of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_os

    @ris_os.setter
    def ris_os(self, ris_os):
        """Sets the ris_os of this ResponseModel.


        :param ris_os: The ris_os of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_os = ris_os

    @property
    def ris_pip_ipad(self):
        """Gets the ris_pip_ipad of this ResponseModel.  # noqa: E501


        :return: The ris_pip_ipad of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_ipad

    @ris_pip_ipad.setter
    def ris_pip_ipad(self, ris_pip_ipad):
        """Sets the ris_pip_ipad of this ResponseModel.


        :param ris_pip_ipad: The ris_pip_ipad of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_ipad = ris_pip_ipad

    @property
    def ris_pip_lat(self):
        """Gets the ris_pip_lat of this ResponseModel.  # noqa: E501


        :return: The ris_pip_lat of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_lat

    @ris_pip_lat.setter
    def ris_pip_lat(self, ris_pip_lat):
        """Sets the ris_pip_lat of this ResponseModel.


        :param ris_pip_lat: The ris_pip_lat of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_lat = ris_pip_lat

    @property
    def ris_pip_lon(self):
        """Gets the ris_pip_lon of this ResponseModel.  # noqa: E501


        :return: The ris_pip_lon of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_lon

    @ris_pip_lon.setter
    def ris_pip_lon(self, ris_pip_lon):
        """Sets the ris_pip_lon of this ResponseModel.


        :param ris_pip_lon: The ris_pip_lon of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_lon = ris_pip_lon

    @property
    def ris_pip_country(self):
        """Gets the ris_pip_country of this ResponseModel.  # noqa: E501


        :return: The ris_pip_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_country

    @ris_pip_country.setter
    def ris_pip_country(self, ris_pip_country):
        """Sets the ris_pip_country of this ResponseModel.


        :param ris_pip_country: The ris_pip_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_country = ris_pip_country

    @property
    def ris_pip_region(self):
        """Gets the ris_pip_region of this ResponseModel.  # noqa: E501


        :return: The ris_pip_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_region

    @ris_pip_region.setter
    def ris_pip_region(self, ris_pip_region):
        """Sets the ris_pip_region of this ResponseModel.


        :param ris_pip_region: The ris_pip_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_region = ris_pip_region

    @property
    def ris_pip_city(self):
        """Gets the ris_pip_city of this ResponseModel.  # noqa: E501


        :return: The ris_pip_city of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_city

    @ris_pip_city.setter
    def ris_pip_city(self, ris_pip_city):
        """Sets the ris_pip_city of this ResponseModel.


        :param ris_pip_city: The ris_pip_city of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_city = ris_pip_city

    @property
    def ris_pip_org(self):
        """Gets the ris_pip_org of this ResponseModel.  # noqa: E501


        :return: The ris_pip_org of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pip_org

    @ris_pip_org.setter
    def ris_pip_org(self, ris_pip_org):
        """Sets the ris_pip_org of this ResponseModel.


        :param ris_pip_org: The ris_pip_org of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pip_org = ris_pip_org

    @property
    def ris_ip_ipad(self):
        """Gets the ris_ip_ipad of this ResponseModel.  # noqa: E501


        :return: The ris_ip_ipad of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_ipad

    @ris_ip_ipad.setter
    def ris_ip_ipad(self, ris_ip_ipad):
        """Sets the ris_ip_ipad of this ResponseModel.


        :param ris_ip_ipad: The ris_ip_ipad of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_ipad = ris_ip_ipad

    @property
    def ris_ip_lat(self):
        """Gets the ris_ip_lat of this ResponseModel.  # noqa: E501


        :return: The ris_ip_lat of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_lat

    @ris_ip_lat.setter
    def ris_ip_lat(self, ris_ip_lat):
        """Sets the ris_ip_lat of this ResponseModel.


        :param ris_ip_lat: The ris_ip_lat of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_lat = ris_ip_lat

    @property
    def ris_ip_lon(self):
        """Gets the ris_ip_lon of this ResponseModel.  # noqa: E501


        :return: The ris_ip_lon of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_lon

    @ris_ip_lon.setter
    def ris_ip_lon(self, ris_ip_lon):
        """Sets the ris_ip_lon of this ResponseModel.


        :param ris_ip_lon: The ris_ip_lon of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_lon = ris_ip_lon

    @property
    def ris_ip_country(self):
        """Gets the ris_ip_country of this ResponseModel.  # noqa: E501


        :return: The ris_ip_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_country

    @ris_ip_country.setter
    def ris_ip_country(self, ris_ip_country):
        """Sets the ris_ip_country of this ResponseModel.


        :param ris_ip_country: The ris_ip_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_country = ris_ip_country

    @property
    def ris_ip_region(self):
        """Gets the ris_ip_region of this ResponseModel.  # noqa: E501


        :return: The ris_ip_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_region

    @ris_ip_region.setter
    def ris_ip_region(self, ris_ip_region):
        """Sets the ris_ip_region of this ResponseModel.


        :param ris_ip_region: The ris_ip_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_region = ris_ip_region

    @property
    def ris_ip_city(self):
        """Gets the ris_ip_city of this ResponseModel.  # noqa: E501


        :return: The ris_ip_city of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_city

    @ris_ip_city.setter
    def ris_ip_city(self, ris_ip_city):
        """Sets the ris_ip_city of this ResponseModel.


        :param ris_ip_city: The ris_ip_city of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_city = ris_ip_city

    @property
    def ris_ip_org(self):
        """Gets the ris_ip_org of this ResponseModel.  # noqa: E501


        :return: The ris_ip_org of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_org

    @ris_ip_org.setter
    def ris_ip_org(self, ris_ip_org):
        """Sets the ris_ip_org of this ResponseModel.


        :param ris_ip_org: The ris_ip_org of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_org = ris_ip_org

    @property
    def ris_warning_count(self):
        """Gets the ris_warning_count of this ResponseModel.  # noqa: E501


        :return: The ris_warning_count of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_warning_count

    @ris_warning_count.setter
    def ris_warning_count(self, ris_warning_count):
        """Sets the ris_warning_count of this ResponseModel.


        :param ris_warning_count: The ris_warning_count of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_warning_count = ris_warning_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResponseModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
