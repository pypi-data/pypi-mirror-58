# coding: utf-8

"""
    KountRISSwaggerV02

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from kount_client.models.billing_address import BillingAddress  # noqa: F401,E501
from kount_client.models.cart_item import CartItem  # noqa: F401,E501
from kount_client.models.shipping_address import ShippingAddress  # noqa: F401,E501
from kount_client.models.user_defined_field import UserDefinedField  # noqa: F401,E501


class InquiryModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'mode': 'str',
        'date_of_birth': 'str',
        'gender': 'str',
        'currency': 'str',
        'sdk_version': 'str',
        'total': 'int',
        'ip_address': 'str',
        'user_agent': 'str',
        'email': 'str',
        'name': 'str',
        'unique': 'str',
        'set_epoch': 'int',
        'cash': 'int',
        'ship_type': 'str',
        'billing_phone_number': 'str',
        'shipping_phone_number': 'str',
        'shipping_name': 'str',
        'shipping_email': 'str',
        'anid': 'str',
        'website': 'str',
        'card_no': 'str',
        'session_id': 'str',
        'mack': 'str',
        'product_type': 'str',
        'product_item': 'str',
        'product_description': 'str',
        'product_quantity': 'int',
        'product_price': 'int',
        'customer_id': 'str',
        'cart': 'str',
        'cart_item': 'list[CartItem]',
        'billing_address': 'list[BillingAddress]',
        'shipping_address': 'list[ShippingAddress]',
        'user_defined_field': 'list[UserDefinedField]',
        'merchant_id': 'int',
        'api_key': 'str',
        'config_key': 'str',
        'url': 'str',
        'version': 'str'
    }

    attribute_map = {
        'mode': 'Mode',
        'date_of_birth': 'DateOfBirth',
        'gender': 'Gender',
        'currency': 'Currency',
        'sdk_version': 'SdkVersion',
        'total': 'Total',
        'ip_address': 'IpAddress',
        'user_agent': 'UserAgent',
        'email': 'Email',
        'name': 'Name',
        'unique': 'Unique',
        'set_epoch': 'SetEpoch',
        'cash': 'Cash',
        'ship_type': 'ShipType',
        'billing_phone_number': 'BillingPhoneNumber',
        'shipping_phone_number': 'ShippingPhoneNumber',
        'shipping_name': 'ShippingName',
        'shipping_email': 'ShippingEmail',
        'anid': 'ANID',
        'website': 'Website',
        'card_no': 'CardNo',
        'session_id': 'SessionId',
        'mack': 'Mack',
        'product_type': 'ProductType',
        'product_item': 'ProductItem',
        'product_description': 'ProductDescription',
        'product_quantity': 'ProductQuantity',
        'product_price': 'ProductPrice',
        'customer_id': 'CustomerId',
        'cart': 'Cart',
        'cart_item': 'cartItem',
        'billing_address': 'billingAddress',
        'shipping_address': 'shippingAddress',
        'user_defined_field': 'userDefinedField',
        'merchant_id': 'MerchantID',
        'api_key': 'ApiKey',
        'config_key': 'ConfigKey',
        'url': 'Url',
        'version': 'Version'
    }

    def __init__(self, mode=None, date_of_birth=None, gender=None, currency=None, sdk_version=None, total=None, ip_address=None, user_agent=None, email=None, name=None, unique=None, set_epoch=None, cash=None, ship_type=None, billing_phone_number=None, shipping_phone_number=None, shipping_name=None, shipping_email=None, anid=None, website=None, card_no=None, session_id=None, mack=None, product_type=None, product_item=None, product_description=None, product_quantity=None, product_price=None, customer_id=None, cart=None, cart_item=None, billing_address=None, shipping_address=None, user_defined_field=None, merchant_id=None, api_key=None, config_key=None, url=None, version=None):  # noqa: E501
        """InquiryModel - a model defined in Swagger"""  # noqa: E501

        self._mode = None
        self._date_of_birth = None
        self._gender = None
        self._currency = None
        self._sdk_version = None
        self._total = None
        self._ip_address = None
        self._user_agent = None
        self._email = None
        self._name = None
        self._unique = None
        self._set_epoch = None
        self._cash = None
        self._ship_type = None
        self._billing_phone_number = None
        self._shipping_phone_number = None
        self._shipping_name = None
        self._shipping_email = None
        self._anid = None
        self._website = None
        self._card_no = None
        self._session_id = None
        self._mack = None
        self._product_type = None
        self._product_item = None
        self._product_description = None
        self._product_quantity = None
        self._product_price = None
        self._customer_id = None
        self._cart = None
        self._cart_item = None
        self._billing_address = None
        self._shipping_address = None
        self._user_defined_field = None
        self._merchant_id = None
        self._api_key = None
        self._config_key = None
        self._url = None
        self._version = None
        self.discriminator = None

        if mode is not None:
            self.mode = mode
        if date_of_birth is not None:
            self.date_of_birth = date_of_birth
        if gender is not None:
            self.gender = gender
        if currency is not None:
            self.currency = currency
        if sdk_version is not None:
            self.sdk_version = sdk_version
        if total is not None:
            self.total = total
        if ip_address is not None:
            self.ip_address = ip_address
        if user_agent is not None:
            self.user_agent = user_agent
        if email is not None:
            self.email = email
        if name is not None:
            self.name = name
        if unique is not None:
            self.unique = unique
        if set_epoch is not None:
            self.set_epoch = set_epoch
        if cash is not None:
            self.cash = cash
        if ship_type is not None:
            self.ship_type = ship_type
        if billing_phone_number is not None:
            self.billing_phone_number = billing_phone_number
        if shipping_phone_number is not None:
            self.shipping_phone_number = shipping_phone_number
        if shipping_name is not None:
            self.shipping_name = shipping_name
        if shipping_email is not None:
            self.shipping_email = shipping_email
        if anid is not None:
            self.anid = anid
        if website is not None:
            self.website = website
        if card_no is not None:
            self.card_no = card_no
        if session_id is not None:
            self.session_id = session_id
        if mack is not None:
            self.mack = mack
        if product_type is not None:
            self.product_type = product_type
        if product_item is not None:
            self.product_item = product_item
        if product_description is not None:
            self.product_description = product_description
        if product_quantity is not None:
            self.product_quantity = product_quantity
        if product_price is not None:
            self.product_price = product_price
        if customer_id is not None:
            self.customer_id = customer_id
        if cart is not None:
            self.cart = cart
        if cart_item is not None:
            self.cart_item = cart_item
        if billing_address is not None:
            self.billing_address = billing_address
        if shipping_address is not None:
            self.shipping_address = shipping_address
        if user_defined_field is not None:
            self.user_defined_field = user_defined_field
        if merchant_id is not None:
            self.merchant_id = merchant_id
        if api_key is not None:
            self.api_key = api_key
        if config_key is not None:
            self.config_key = config_key
        if url is not None:
            self.url = url
        if version is not None:
            self.version = version

    @property
    def mode(self):
        """Gets the mode of this InquiryModel.  # noqa: E501


        :return: The mode of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this InquiryModel.


        :param mode: The mode of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._mode = mode

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this InquiryModel.  # noqa: E501


        :return: The date_of_birth of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this InquiryModel.


        :param date_of_birth: The date_of_birth of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._date_of_birth = date_of_birth

    @property
    def gender(self):
        """Gets the gender of this InquiryModel.  # noqa: E501


        :return: The gender of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this InquiryModel.


        :param gender: The gender of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def currency(self):
        """Gets the currency of this InquiryModel.  # noqa: E501


        :return: The currency of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this InquiryModel.


        :param currency: The currency of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def sdk_version(self):
        """Gets the sdk_version of this InquiryModel.  # noqa: E501


        :return: The sdk_version of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._sdk_version

    @sdk_version.setter
    def sdk_version(self, sdk_version):
        """Sets the sdk_version of this InquiryModel.


        :param sdk_version: The sdk_version of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._sdk_version = sdk_version

    @property
    def total(self):
        """Gets the total of this InquiryModel.  # noqa: E501


        :return: The total of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this InquiryModel.


        :param total: The total of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._total = total

    @property
    def ip_address(self):
        """Gets the ip_address of this InquiryModel.  # noqa: E501


        :return: The ip_address of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this InquiryModel.


        :param ip_address: The ip_address of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._ip_address = ip_address

    @property
    def user_agent(self):
        """Gets the user_agent of this InquiryModel.  # noqa: E501


        :return: The user_agent of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this InquiryModel.


        :param user_agent: The user_agent of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._user_agent = user_agent

    @property
    def email(self):
        """Gets the email of this InquiryModel.  # noqa: E501


        :return: The email of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this InquiryModel.


        :param email: The email of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this InquiryModel.  # noqa: E501


        :return: The name of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InquiryModel.


        :param name: The name of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def unique(self):
        """Gets the unique of this InquiryModel.  # noqa: E501


        :return: The unique of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._unique

    @unique.setter
    def unique(self, unique):
        """Sets the unique of this InquiryModel.


        :param unique: The unique of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._unique = unique

    @property
    def set_epoch(self):
        """Gets the set_epoch of this InquiryModel.  # noqa: E501


        :return: The set_epoch of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._set_epoch

    @set_epoch.setter
    def set_epoch(self, set_epoch):
        """Sets the set_epoch of this InquiryModel.


        :param set_epoch: The set_epoch of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._set_epoch = set_epoch

    @property
    def cash(self):
        """Gets the cash of this InquiryModel.  # noqa: E501


        :return: The cash of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._cash

    @cash.setter
    def cash(self, cash):
        """Sets the cash of this InquiryModel.


        :param cash: The cash of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._cash = cash

    @property
    def ship_type(self):
        """Gets the ship_type of this InquiryModel.  # noqa: E501


        :return: The ship_type of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._ship_type

    @ship_type.setter
    def ship_type(self, ship_type):
        """Sets the ship_type of this InquiryModel.


        :param ship_type: The ship_type of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._ship_type = ship_type

    @property
    def billing_phone_number(self):
        """Gets the billing_phone_number of this InquiryModel.  # noqa: E501


        :return: The billing_phone_number of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._billing_phone_number

    @billing_phone_number.setter
    def billing_phone_number(self, billing_phone_number):
        """Sets the billing_phone_number of this InquiryModel.


        :param billing_phone_number: The billing_phone_number of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._billing_phone_number = billing_phone_number

    @property
    def shipping_phone_number(self):
        """Gets the shipping_phone_number of this InquiryModel.  # noqa: E501


        :return: The shipping_phone_number of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._shipping_phone_number

    @shipping_phone_number.setter
    def shipping_phone_number(self, shipping_phone_number):
        """Sets the shipping_phone_number of this InquiryModel.


        :param shipping_phone_number: The shipping_phone_number of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._shipping_phone_number = shipping_phone_number

    @property
    def shipping_name(self):
        """Gets the shipping_name of this InquiryModel.  # noqa: E501


        :return: The shipping_name of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._shipping_name

    @shipping_name.setter
    def shipping_name(self, shipping_name):
        """Sets the shipping_name of this InquiryModel.


        :param shipping_name: The shipping_name of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._shipping_name = shipping_name

    @property
    def shipping_email(self):
        """Gets the shipping_email of this InquiryModel.  # noqa: E501


        :return: The shipping_email of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._shipping_email

    @shipping_email.setter
    def shipping_email(self, shipping_email):
        """Sets the shipping_email of this InquiryModel.


        :param shipping_email: The shipping_email of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._shipping_email = shipping_email

    @property
    def anid(self):
        """Gets the anid of this InquiryModel.  # noqa: E501


        :return: The anid of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._anid

    @anid.setter
    def anid(self, anid):
        """Sets the anid of this InquiryModel.


        :param anid: The anid of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._anid = anid

    @property
    def website(self):
        """Gets the website of this InquiryModel.  # noqa: E501


        :return: The website of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this InquiryModel.


        :param website: The website of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._website = website

    @property
    def card_no(self):
        """Gets the card_no of this InquiryModel.  # noqa: E501


        :return: The card_no of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._card_no

    @card_no.setter
    def card_no(self, card_no):
        """Sets the card_no of this InquiryModel.


        :param card_no: The card_no of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._card_no = card_no

    @property
    def session_id(self):
        """Gets the session_id of this InquiryModel.  # noqa: E501


        :return: The session_id of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this InquiryModel.


        :param session_id: The session_id of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._session_id = session_id

    @property
    def mack(self):
        """Gets the mack of this InquiryModel.  # noqa: E501


        :return: The mack of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._mack

    @mack.setter
    def mack(self, mack):
        """Sets the mack of this InquiryModel.


        :param mack: The mack of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._mack = mack

    @property
    def product_type(self):
        """Gets the product_type of this InquiryModel.  # noqa: E501


        :return: The product_type of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this InquiryModel.


        :param product_type: The product_type of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._product_type = product_type

    @property
    def product_item(self):
        """Gets the product_item of this InquiryModel.  # noqa: E501


        :return: The product_item of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._product_item

    @product_item.setter
    def product_item(self, product_item):
        """Sets the product_item of this InquiryModel.


        :param product_item: The product_item of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._product_item = product_item

    @property
    def product_description(self):
        """Gets the product_description of this InquiryModel.  # noqa: E501


        :return: The product_description of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this InquiryModel.


        :param product_description: The product_description of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def product_quantity(self):
        """Gets the product_quantity of this InquiryModel.  # noqa: E501


        :return: The product_quantity of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._product_quantity

    @product_quantity.setter
    def product_quantity(self, product_quantity):
        """Sets the product_quantity of this InquiryModel.


        :param product_quantity: The product_quantity of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._product_quantity = product_quantity

    @property
    def product_price(self):
        """Gets the product_price of this InquiryModel.  # noqa: E501


        :return: The product_price of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._product_price

    @product_price.setter
    def product_price(self, product_price):
        """Sets the product_price of this InquiryModel.


        :param product_price: The product_price of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._product_price = product_price

    @property
    def customer_id(self):
        """Gets the customer_id of this InquiryModel.  # noqa: E501


        :return: The customer_id of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this InquiryModel.


        :param customer_id: The customer_id of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._customer_id = customer_id

    @property
    def cart(self):
        """Gets the cart of this InquiryModel.  # noqa: E501


        :return: The cart of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._cart

    @cart.setter
    def cart(self, cart):
        """Sets the cart of this InquiryModel.


        :param cart: The cart of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._cart = cart

    @property
    def cart_item(self):
        """Gets the cart_item of this InquiryModel.  # noqa: E501


        :return: The cart_item of this InquiryModel.  # noqa: E501
        :rtype: list[CartItem]
        """
        return self._cart_item

    @cart_item.setter
    def cart_item(self, cart_item):
        """Sets the cart_item of this InquiryModel.


        :param cart_item: The cart_item of this InquiryModel.  # noqa: E501
        :type: list[CartItem]
        """

        self._cart_item = cart_item

    @property
    def billing_address(self):
        """Gets the billing_address of this InquiryModel.  # noqa: E501


        :return: The billing_address of this InquiryModel.  # noqa: E501
        :rtype: list[BillingAddress]
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this InquiryModel.


        :param billing_address: The billing_address of this InquiryModel.  # noqa: E501
        :type: list[BillingAddress]
        """

        self._billing_address = billing_address

    @property
    def shipping_address(self):
        """Gets the shipping_address of this InquiryModel.  # noqa: E501


        :return: The shipping_address of this InquiryModel.  # noqa: E501
        :rtype: list[ShippingAddress]
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this InquiryModel.


        :param shipping_address: The shipping_address of this InquiryModel.  # noqa: E501
        :type: list[ShippingAddress]
        """

        self._shipping_address = shipping_address

    @property
    def user_defined_field(self):
        """Gets the user_defined_field of this InquiryModel.  # noqa: E501


        :return: The user_defined_field of this InquiryModel.  # noqa: E501
        :rtype: list[UserDefinedField]
        """
        return self._user_defined_field

    @user_defined_field.setter
    def user_defined_field(self, user_defined_field):
        """Sets the user_defined_field of this InquiryModel.


        :param user_defined_field: The user_defined_field of this InquiryModel.  # noqa: E501
        :type: list[UserDefinedField]
        """

        self._user_defined_field = user_defined_field

    @property
    def merchant_id(self):
        """Gets the merchant_id of this InquiryModel.  # noqa: E501


        :return: The merchant_id of this InquiryModel.  # noqa: E501
        :rtype: int
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this InquiryModel.


        :param merchant_id: The merchant_id of this InquiryModel.  # noqa: E501
        :type: int
        """

        self._merchant_id = merchant_id

    @property
    def api_key(self):
        """Gets the api_key of this InquiryModel.  # noqa: E501


        :return: The api_key of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this InquiryModel.


        :param api_key: The api_key of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._api_key = api_key

    @property
    def config_key(self):
        """Gets the config_key of this InquiryModel.  # noqa: E501


        :return: The config_key of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._config_key

    @config_key.setter
    def config_key(self, config_key):
        """Sets the config_key of this InquiryModel.


        :param config_key: The config_key of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._config_key = config_key

    @property
    def url(self):
        """Gets the url of this InquiryModel.  # noqa: E501


        :return: The url of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InquiryModel.


        :param url: The url of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def version(self):
        """Gets the version of this InquiryModel.  # noqa: E501


        :return: The version of this InquiryModel.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this InquiryModel.


        :param version: The version of this InquiryModel.  # noqa: E501
        :type: str
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InquiryModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InquiryModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
