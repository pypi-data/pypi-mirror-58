# coding: utf-8

"""
    KountRISSwaggerV02

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from kount_client.models.kc_event import KcEvent  # noqa: F401,E501


class ResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'get_response': 'str',
        'ris_error_code': 'str',
        'ris_version': 'str',
        'ris_mode': 'str',
        'ris_transaction_id': 'str',
        'ris_merchant_id': 'str',
        'ris_session_id': 'str',
        'ris_order_number': 'str',
        'ris_auto': 'str',
        'ris_reason': 'str',
        'ris_reason_code': 'str',
        'ris_score': 'str',
        'ris_omniscore': 'str',
        'ris_geox': 'str',
        'ris_brand': 'str',
        'ris_velo': 'str',
        'ris_vmax': 'str',
        'ris_network': 'str',
        'ris_know_your_customer': 'str',
        'ris_region': 'str',
        'ris_kaptcha': 'str',
        'ris_proxy': 'str',
        'ris_emails': 'str',
        'ris_http_country': 'str',
        'ris_time_zone': 'str',
        'ris_cards': 'str',
        'ris_pc_remote': 'str',
        'ris_devices': 'str',
        'ris_device_layers': 'str',
        'ris_mobile_forwarder': 'str',
        'ris_voice_device': 'str',
        'ris_local_time': 'str',
        'ris_mobile_type': 'str',
        'ris_finger_print': 'str',
        'ris_flash': 'str',
        'ris_language': 'str',
        'ris_country': 'str',
        'ris_java_script': 'str',
        'ris_cookies': 'str',
        'ris_mobile_device': 'str',
        'ris_site': 'str',
        'ris_master_card_fraud_score': 'str',
        'ris_pierced_ip_address': 'str',
        'ris_pierced_ip_address_latitude': 'str',
        'ris_pierced_ip_address_longitude': 'str',
        'ris_pierced_ip_address_country': 'str',
        'ris_pierced_ip_address_region': 'str',
        'ris_pierced_ip_address_city': 'str',
        'ris_pierced_ip_address_organization': 'str',
        'ris_ip_address': 'str',
        'ris_ip_address_latitude': 'str',
        'ris_ip_address_longitude': 'str',
        'ris_ip_address_country': 'str',
        'ris_ip_address_region': 'str',
        'ris_ip_address_city': 'str',
        'ris_ip_address_organization': 'str',
        'ris_date_device_first_seen': 'str',
        'ris_user_agent_string': 'str',
        'ris_device_screen_resolution': 'str',
        'ris_os': 'str',
        'ris_browser': 'str',
        'ris_to_string': 'str',
        'rules_triggered': 'dict(str, object)',
        'ris_number_rules_triggered': 'int',
        'ris_warnings': 'list[str]',
        'ris_warning_count': 'int',
        'ris_errors': 'list[str]',
        'ris_error_count': 'int',
        'has_errors': 'bool',
        'ris_lexis_nexis_cbd_attributes': 'dict(str, object)',
        'ris_lexis_nexis_instant_id_attributes': 'dict(str, object)',
        'ris_counters_triggered': 'dict(str, object)',
        'ris_number_counters_triggered': 'int',
        'ris_kount_central_customer_id': 'str',
        'ris_kount_central_warnings': 'list[str]',
        'ris_kount_central_warning_count': 'int',
        'ris_kount_central_errors': 'list[str]',
        'ris_kount_central_error_count': 'int',
        'ris_kount_central_number_thresholds_triggered': 'int',
        'ris_kount_central_decision': 'str',
        'kount_central_threshold_events': 'list[KcEvent]'
    }

    attribute_map = {
        'get_response': 'GetResponse',
        'ris_error_code': 'risErrorCode',
        'ris_version': 'risVersion',
        'ris_mode': 'risMode',
        'ris_transaction_id': 'risTransactionId',
        'ris_merchant_id': 'risMerchantId',
        'ris_session_id': 'risSessionId',
        'ris_order_number': 'risOrderNumber',
        'ris_auto': 'risAUTO',
        'ris_reason': 'risReason',
        'ris_reason_code': 'risReasonCode',
        'ris_score': 'risScore',
        'ris_omniscore': 'risOmniscore',
        'ris_geox': 'risGeox',
        'ris_brand': 'risBrand',
        'ris_velo': 'risVelo',
        'ris_vmax': 'risVmax',
        'ris_network': 'risNetwork',
        'ris_know_your_customer': 'risKnowYourCustomer',
        'ris_region': 'risRegion',
        'ris_kaptcha': 'risKaptcha',
        'ris_proxy': 'risProxy',
        'ris_emails': 'risEmails',
        'ris_http_country': 'risHttpCountry',
        'ris_time_zone': 'risTimeZone',
        'ris_cards': 'risCards',
        'ris_pc_remote': 'risPcRemote',
        'ris_devices': 'risDevices',
        'ris_device_layers': 'risDeviceLayers',
        'ris_mobile_forwarder': 'risMobileForwarder',
        'ris_voice_device': 'risVoiceDevice',
        'ris_local_time': 'risLocalTime',
        'ris_mobile_type': 'risMobileType',
        'ris_finger_print': 'risFingerPrint',
        'ris_flash': 'risFlash',
        'ris_language': 'risLanguage',
        'ris_country': 'risCountry',
        'ris_java_script': 'risJavaScript',
        'ris_cookies': 'risCookies',
        'ris_mobile_device': 'risMobileDevice',
        'ris_site': 'risSite',
        'ris_master_card_fraud_score': 'risMasterCardFraudScore',
        'ris_pierced_ip_address': 'risPiercedIPAddress',
        'ris_pierced_ip_address_latitude': 'risPiercedIPAddressLatitude',
        'ris_pierced_ip_address_longitude': 'risPiercedIPAddressLongitude',
        'ris_pierced_ip_address_country': 'risPiercedIPAddressCountry',
        'ris_pierced_ip_address_region': 'risPiercedIPAddressRegion',
        'ris_pierced_ip_address_city': 'risPiercedIPAddressCity',
        'ris_pierced_ip_address_organization': 'risPiercedIPAddressOrganization',
        'ris_ip_address': 'risIPAddress',
        'ris_ip_address_latitude': 'risIPAddressLatitude',
        'ris_ip_address_longitude': 'risIPAddressLongitude',
        'ris_ip_address_country': 'risIPAddressCountry',
        'ris_ip_address_region': 'risIPAddressRegion',
        'ris_ip_address_city': 'risIPAddressCity',
        'ris_ip_address_organization': 'risIPAddressOrganization',
        'ris_date_device_first_seen': 'risDateDeviceFirstSeen',
        'ris_user_agent_string': 'risUserAgentString',
        'ris_device_screen_resolution': 'risDeviceScreenResolution',
        'ris_os': 'risOS',
        'ris_browser': 'risBrowser',
        'ris_to_string': 'risToString',
        'rules_triggered': 'RulesTriggered',
        'ris_number_rules_triggered': 'risNumberRulesTriggered',
        'ris_warnings': 'risWarnings',
        'ris_warning_count': 'risWarningCount',
        'ris_errors': 'risErrors',
        'ris_error_count': 'risErrorCount',
        'has_errors': 'HasErrors',
        'ris_lexis_nexis_cbd_attributes': 'risLexisNexisCbdAttributes',
        'ris_lexis_nexis_instant_id_attributes': 'risLexisNexisInstantIdAttributes',
        'ris_counters_triggered': 'risCountersTriggered',
        'ris_number_counters_triggered': 'risNumberCountersTriggered',
        'ris_kount_central_customer_id': 'risKountCentralCustomerId',
        'ris_kount_central_warnings': 'risKountCentralWarnings',
        'ris_kount_central_warning_count': 'risKountCentralWarningCount',
        'ris_kount_central_errors': 'risKountCentralErrors',
        'ris_kount_central_error_count': 'risKountCentralErrorCount',
        'ris_kount_central_number_thresholds_triggered': 'risKountCentralNumberThresholdsTriggered',
        'ris_kount_central_decision': 'risKountCentralDecision',
        'kount_central_threshold_events': 'KountCentralThresholdEvents'
    }

    def __init__(self, get_response=None, ris_error_code=None, ris_version=None, ris_mode=None, ris_transaction_id=None, ris_merchant_id=None, ris_session_id=None, ris_order_number=None, ris_auto=None, ris_reason=None, ris_reason_code=None, ris_score=None, ris_omniscore=None, ris_geox=None, ris_brand=None, ris_velo=None, ris_vmax=None, ris_network=None, ris_know_your_customer=None, ris_region=None, ris_kaptcha=None, ris_proxy=None, ris_emails=None, ris_http_country=None, ris_time_zone=None, ris_cards=None, ris_pc_remote=None, ris_devices=None, ris_device_layers=None, ris_mobile_forwarder=None, ris_voice_device=None, ris_local_time=None, ris_mobile_type=None, ris_finger_print=None, ris_flash=None, ris_language=None, ris_country=None, ris_java_script=None, ris_cookies=None, ris_mobile_device=None, ris_site=None, ris_master_card_fraud_score=None, ris_pierced_ip_address=None, ris_pierced_ip_address_latitude=None, ris_pierced_ip_address_longitude=None, ris_pierced_ip_address_country=None, ris_pierced_ip_address_region=None, ris_pierced_ip_address_city=None, ris_pierced_ip_address_organization=None, ris_ip_address=None, ris_ip_address_latitude=None, ris_ip_address_longitude=None, ris_ip_address_country=None, ris_ip_address_region=None, ris_ip_address_city=None, ris_ip_address_organization=None, ris_date_device_first_seen=None, ris_user_agent_string=None, ris_device_screen_resolution=None, ris_os=None, ris_browser=None, ris_to_string=None, rules_triggered=None, ris_number_rules_triggered=None, ris_warnings=None, ris_warning_count=None, ris_errors=None, ris_error_count=None, has_errors=None, ris_lexis_nexis_cbd_attributes=None, ris_lexis_nexis_instant_id_attributes=None, ris_counters_triggered=None, ris_number_counters_triggered=None, ris_kount_central_customer_id=None, ris_kount_central_warnings=None, ris_kount_central_warning_count=None, ris_kount_central_errors=None, ris_kount_central_error_count=None, ris_kount_central_number_thresholds_triggered=None, ris_kount_central_decision=None, kount_central_threshold_events=None):  # noqa: E501
        """ResponseModel - a model defined in Swagger"""  # noqa: E501

        self._get_response = None
        self._ris_error_code = None
        self._ris_version = None
        self._ris_mode = None
        self._ris_transaction_id = None
        self._ris_merchant_id = None
        self._ris_session_id = None
        self._ris_order_number = None
        self._ris_auto = None
        self._ris_reason = None
        self._ris_reason_code = None
        self._ris_score = None
        self._ris_omniscore = None
        self._ris_geox = None
        self._ris_brand = None
        self._ris_velo = None
        self._ris_vmax = None
        self._ris_network = None
        self._ris_know_your_customer = None
        self._ris_region = None
        self._ris_kaptcha = None
        self._ris_proxy = None
        self._ris_emails = None
        self._ris_http_country = None
        self._ris_time_zone = None
        self._ris_cards = None
        self._ris_pc_remote = None
        self._ris_devices = None
        self._ris_device_layers = None
        self._ris_mobile_forwarder = None
        self._ris_voice_device = None
        self._ris_local_time = None
        self._ris_mobile_type = None
        self._ris_finger_print = None
        self._ris_flash = None
        self._ris_language = None
        self._ris_country = None
        self._ris_java_script = None
        self._ris_cookies = None
        self._ris_mobile_device = None
        self._ris_site = None
        self._ris_master_card_fraud_score = None
        self._ris_pierced_ip_address = None
        self._ris_pierced_ip_address_latitude = None
        self._ris_pierced_ip_address_longitude = None
        self._ris_pierced_ip_address_country = None
        self._ris_pierced_ip_address_region = None
        self._ris_pierced_ip_address_city = None
        self._ris_pierced_ip_address_organization = None
        self._ris_ip_address = None
        self._ris_ip_address_latitude = None
        self._ris_ip_address_longitude = None
        self._ris_ip_address_country = None
        self._ris_ip_address_region = None
        self._ris_ip_address_city = None
        self._ris_ip_address_organization = None
        self._ris_date_device_first_seen = None
        self._ris_user_agent_string = None
        self._ris_device_screen_resolution = None
        self._ris_os = None
        self._ris_browser = None
        self._ris_to_string = None
        self._rules_triggered = None
        self._ris_number_rules_triggered = None
        self._ris_warnings = None
        self._ris_warning_count = None
        self._ris_errors = None
        self._ris_error_count = None
        self._has_errors = None
        self._ris_lexis_nexis_cbd_attributes = None
        self._ris_lexis_nexis_instant_id_attributes = None
        self._ris_counters_triggered = None
        self._ris_number_counters_triggered = None
        self._ris_kount_central_customer_id = None
        self._ris_kount_central_warnings = None
        self._ris_kount_central_warning_count = None
        self._ris_kount_central_errors = None
        self._ris_kount_central_error_count = None
        self._ris_kount_central_number_thresholds_triggered = None
        self._ris_kount_central_decision = None
        self._kount_central_threshold_events = None
        self.discriminator = None

        if get_response is not None:
            self.get_response = get_response
        if ris_error_code is not None:
            self.ris_error_code = ris_error_code
        if ris_version is not None:
            self.ris_version = ris_version
        if ris_mode is not None:
            self.ris_mode = ris_mode
        if ris_transaction_id is not None:
            self.ris_transaction_id = ris_transaction_id
        if ris_merchant_id is not None:
            self.ris_merchant_id = ris_merchant_id
        if ris_session_id is not None:
            self.ris_session_id = ris_session_id
        if ris_order_number is not None:
            self.ris_order_number = ris_order_number
        if ris_auto is not None:
            self.ris_auto = ris_auto
        if ris_reason is not None:
            self.ris_reason = ris_reason
        if ris_reason_code is not None:
            self.ris_reason_code = ris_reason_code
        if ris_score is not None:
            self.ris_score = ris_score
        if ris_omniscore is not None:
            self.ris_omniscore = ris_omniscore
        if ris_geox is not None:
            self.ris_geox = ris_geox
        if ris_brand is not None:
            self.ris_brand = ris_brand
        if ris_velo is not None:
            self.ris_velo = ris_velo
        if ris_vmax is not None:
            self.ris_vmax = ris_vmax
        if ris_network is not None:
            self.ris_network = ris_network
        if ris_know_your_customer is not None:
            self.ris_know_your_customer = ris_know_your_customer
        if ris_region is not None:
            self.ris_region = ris_region
        if ris_kaptcha is not None:
            self.ris_kaptcha = ris_kaptcha
        if ris_proxy is not None:
            self.ris_proxy = ris_proxy
        if ris_emails is not None:
            self.ris_emails = ris_emails
        if ris_http_country is not None:
            self.ris_http_country = ris_http_country
        if ris_time_zone is not None:
            self.ris_time_zone = ris_time_zone
        if ris_cards is not None:
            self.ris_cards = ris_cards
        if ris_pc_remote is not None:
            self.ris_pc_remote = ris_pc_remote
        if ris_devices is not None:
            self.ris_devices = ris_devices
        if ris_device_layers is not None:
            self.ris_device_layers = ris_device_layers
        if ris_mobile_forwarder is not None:
            self.ris_mobile_forwarder = ris_mobile_forwarder
        if ris_voice_device is not None:
            self.ris_voice_device = ris_voice_device
        if ris_local_time is not None:
            self.ris_local_time = ris_local_time
        if ris_mobile_type is not None:
            self.ris_mobile_type = ris_mobile_type
        if ris_finger_print is not None:
            self.ris_finger_print = ris_finger_print
        if ris_flash is not None:
            self.ris_flash = ris_flash
        if ris_language is not None:
            self.ris_language = ris_language
        if ris_country is not None:
            self.ris_country = ris_country
        if ris_java_script is not None:
            self.ris_java_script = ris_java_script
        if ris_cookies is not None:
            self.ris_cookies = ris_cookies
        if ris_mobile_device is not None:
            self.ris_mobile_device = ris_mobile_device
        if ris_site is not None:
            self.ris_site = ris_site
        if ris_master_card_fraud_score is not None:
            self.ris_master_card_fraud_score = ris_master_card_fraud_score
        if ris_pierced_ip_address is not None:
            self.ris_pierced_ip_address = ris_pierced_ip_address
        if ris_pierced_ip_address_latitude is not None:
            self.ris_pierced_ip_address_latitude = ris_pierced_ip_address_latitude
        if ris_pierced_ip_address_longitude is not None:
            self.ris_pierced_ip_address_longitude = ris_pierced_ip_address_longitude
        if ris_pierced_ip_address_country is not None:
            self.ris_pierced_ip_address_country = ris_pierced_ip_address_country
        if ris_pierced_ip_address_region is not None:
            self.ris_pierced_ip_address_region = ris_pierced_ip_address_region
        if ris_pierced_ip_address_city is not None:
            self.ris_pierced_ip_address_city = ris_pierced_ip_address_city
        if ris_pierced_ip_address_organization is not None:
            self.ris_pierced_ip_address_organization = ris_pierced_ip_address_organization
        if ris_ip_address is not None:
            self.ris_ip_address = ris_ip_address
        if ris_ip_address_latitude is not None:
            self.ris_ip_address_latitude = ris_ip_address_latitude
        if ris_ip_address_longitude is not None:
            self.ris_ip_address_longitude = ris_ip_address_longitude
        if ris_ip_address_country is not None:
            self.ris_ip_address_country = ris_ip_address_country
        if ris_ip_address_region is not None:
            self.ris_ip_address_region = ris_ip_address_region
        if ris_ip_address_city is not None:
            self.ris_ip_address_city = ris_ip_address_city
        if ris_ip_address_organization is not None:
            self.ris_ip_address_organization = ris_ip_address_organization
        if ris_date_device_first_seen is not None:
            self.ris_date_device_first_seen = ris_date_device_first_seen
        if ris_user_agent_string is not None:
            self.ris_user_agent_string = ris_user_agent_string
        if ris_device_screen_resolution is not None:
            self.ris_device_screen_resolution = ris_device_screen_resolution
        if ris_os is not None:
            self.ris_os = ris_os
        if ris_browser is not None:
            self.ris_browser = ris_browser
        if ris_to_string is not None:
            self.ris_to_string = ris_to_string
        if rules_triggered is not None:
            self.rules_triggered = rules_triggered
        if ris_number_rules_triggered is not None:
            self.ris_number_rules_triggered = ris_number_rules_triggered
        if ris_warnings is not None:
            self.ris_warnings = ris_warnings
        if ris_warning_count is not None:
            self.ris_warning_count = ris_warning_count
        if ris_errors is not None:
            self.ris_errors = ris_errors
        if ris_error_count is not None:
            self.ris_error_count = ris_error_count
        if has_errors is not None:
            self.has_errors = has_errors
        if ris_lexis_nexis_cbd_attributes is not None:
            self.ris_lexis_nexis_cbd_attributes = ris_lexis_nexis_cbd_attributes
        if ris_lexis_nexis_instant_id_attributes is not None:
            self.ris_lexis_nexis_instant_id_attributes = ris_lexis_nexis_instant_id_attributes
        if ris_counters_triggered is not None:
            self.ris_counters_triggered = ris_counters_triggered
        if ris_number_counters_triggered is not None:
            self.ris_number_counters_triggered = ris_number_counters_triggered
        if ris_kount_central_customer_id is not None:
            self.ris_kount_central_customer_id = ris_kount_central_customer_id
        if ris_kount_central_warnings is not None:
            self.ris_kount_central_warnings = ris_kount_central_warnings
        if ris_kount_central_warning_count is not None:
            self.ris_kount_central_warning_count = ris_kount_central_warning_count
        if ris_kount_central_errors is not None:
            self.ris_kount_central_errors = ris_kount_central_errors
        if ris_kount_central_error_count is not None:
            self.ris_kount_central_error_count = ris_kount_central_error_count
        if ris_kount_central_number_thresholds_triggered is not None:
            self.ris_kount_central_number_thresholds_triggered = ris_kount_central_number_thresholds_triggered
        if ris_kount_central_decision is not None:
            self.ris_kount_central_decision = ris_kount_central_decision
        if kount_central_threshold_events is not None:
            self.kount_central_threshold_events = kount_central_threshold_events

    @property
    def get_response(self):
        """Gets the get_response of this ResponseModel.  # noqa: E501


        :return: The get_response of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._get_response

    @get_response.setter
    def get_response(self, get_response):
        """Sets the get_response of this ResponseModel.


        :param get_response: The get_response of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._get_response = get_response

    @property
    def ris_error_code(self):
        """Gets the ris_error_code of this ResponseModel.  # noqa: E501


        :return: The ris_error_code of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_error_code

    @ris_error_code.setter
    def ris_error_code(self, ris_error_code):
        """Sets the ris_error_code of this ResponseModel.


        :param ris_error_code: The ris_error_code of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_error_code = ris_error_code

    @property
    def ris_version(self):
        """Gets the ris_version of this ResponseModel.  # noqa: E501


        :return: The ris_version of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_version

    @ris_version.setter
    def ris_version(self, ris_version):
        """Sets the ris_version of this ResponseModel.


        :param ris_version: The ris_version of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_version = ris_version

    @property
    def ris_mode(self):
        """Gets the ris_mode of this ResponseModel.  # noqa: E501


        :return: The ris_mode of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mode

    @ris_mode.setter
    def ris_mode(self, ris_mode):
        """Sets the ris_mode of this ResponseModel.


        :param ris_mode: The ris_mode of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mode = ris_mode

    @property
    def ris_transaction_id(self):
        """Gets the ris_transaction_id of this ResponseModel.  # noqa: E501


        :return: The ris_transaction_id of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_transaction_id

    @ris_transaction_id.setter
    def ris_transaction_id(self, ris_transaction_id):
        """Sets the ris_transaction_id of this ResponseModel.


        :param ris_transaction_id: The ris_transaction_id of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_transaction_id = ris_transaction_id

    @property
    def ris_merchant_id(self):
        """Gets the ris_merchant_id of this ResponseModel.  # noqa: E501


        :return: The ris_merchant_id of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_merchant_id

    @ris_merchant_id.setter
    def ris_merchant_id(self, ris_merchant_id):
        """Sets the ris_merchant_id of this ResponseModel.


        :param ris_merchant_id: The ris_merchant_id of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_merchant_id = ris_merchant_id

    @property
    def ris_session_id(self):
        """Gets the ris_session_id of this ResponseModel.  # noqa: E501


        :return: The ris_session_id of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_session_id

    @ris_session_id.setter
    def ris_session_id(self, ris_session_id):
        """Sets the ris_session_id of this ResponseModel.


        :param ris_session_id: The ris_session_id of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_session_id = ris_session_id

    @property
    def ris_order_number(self):
        """Gets the ris_order_number of this ResponseModel.  # noqa: E501


        :return: The ris_order_number of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_order_number

    @ris_order_number.setter
    def ris_order_number(self, ris_order_number):
        """Sets the ris_order_number of this ResponseModel.


        :param ris_order_number: The ris_order_number of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_order_number = ris_order_number

    @property
    def ris_auto(self):
        """Gets the ris_auto of this ResponseModel.  # noqa: E501


        :return: The ris_auto of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_auto

    @ris_auto.setter
    def ris_auto(self, ris_auto):
        """Sets the ris_auto of this ResponseModel.


        :param ris_auto: The ris_auto of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_auto = ris_auto

    @property
    def ris_reason(self):
        """Gets the ris_reason of this ResponseModel.  # noqa: E501


        :return: The ris_reason of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_reason

    @ris_reason.setter
    def ris_reason(self, ris_reason):
        """Sets the ris_reason of this ResponseModel.


        :param ris_reason: The ris_reason of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_reason = ris_reason

    @property
    def ris_reason_code(self):
        """Gets the ris_reason_code of this ResponseModel.  # noqa: E501


        :return: The ris_reason_code of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_reason_code

    @ris_reason_code.setter
    def ris_reason_code(self, ris_reason_code):
        """Sets the ris_reason_code of this ResponseModel.


        :param ris_reason_code: The ris_reason_code of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_reason_code = ris_reason_code

    @property
    def ris_score(self):
        """Gets the ris_score of this ResponseModel.  # noqa: E501


        :return: The ris_score of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_score

    @ris_score.setter
    def ris_score(self, ris_score):
        """Sets the ris_score of this ResponseModel.


        :param ris_score: The ris_score of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_score = ris_score

    @property
    def ris_omniscore(self):
        """Gets the ris_omniscore of this ResponseModel.  # noqa: E501


        :return: The ris_omniscore of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_omniscore

    @ris_omniscore.setter
    def ris_omniscore(self, ris_omniscore):
        """Sets the ris_omniscore of this ResponseModel.


        :param ris_omniscore: The ris_omniscore of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_omniscore = ris_omniscore

    @property
    def ris_geox(self):
        """Gets the ris_geox of this ResponseModel.  # noqa: E501


        :return: The ris_geox of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_geox

    @ris_geox.setter
    def ris_geox(self, ris_geox):
        """Sets the ris_geox of this ResponseModel.


        :param ris_geox: The ris_geox of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_geox = ris_geox

    @property
    def ris_brand(self):
        """Gets the ris_brand of this ResponseModel.  # noqa: E501


        :return: The ris_brand of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_brand

    @ris_brand.setter
    def ris_brand(self, ris_brand):
        """Sets the ris_brand of this ResponseModel.


        :param ris_brand: The ris_brand of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_brand = ris_brand

    @property
    def ris_velo(self):
        """Gets the ris_velo of this ResponseModel.  # noqa: E501


        :return: The ris_velo of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_velo

    @ris_velo.setter
    def ris_velo(self, ris_velo):
        """Sets the ris_velo of this ResponseModel.


        :param ris_velo: The ris_velo of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_velo = ris_velo

    @property
    def ris_vmax(self):
        """Gets the ris_vmax of this ResponseModel.  # noqa: E501


        :return: The ris_vmax of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_vmax

    @ris_vmax.setter
    def ris_vmax(self, ris_vmax):
        """Sets the ris_vmax of this ResponseModel.


        :param ris_vmax: The ris_vmax of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_vmax = ris_vmax

    @property
    def ris_network(self):
        """Gets the ris_network of this ResponseModel.  # noqa: E501


        :return: The ris_network of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_network

    @ris_network.setter
    def ris_network(self, ris_network):
        """Sets the ris_network of this ResponseModel.


        :param ris_network: The ris_network of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_network = ris_network

    @property
    def ris_know_your_customer(self):
        """Gets the ris_know_your_customer of this ResponseModel.  # noqa: E501


        :return: The ris_know_your_customer of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_know_your_customer

    @ris_know_your_customer.setter
    def ris_know_your_customer(self, ris_know_your_customer):
        """Sets the ris_know_your_customer of this ResponseModel.


        :param ris_know_your_customer: The ris_know_your_customer of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_know_your_customer = ris_know_your_customer

    @property
    def ris_region(self):
        """Gets the ris_region of this ResponseModel.  # noqa: E501


        :return: The ris_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_region

    @ris_region.setter
    def ris_region(self, ris_region):
        """Sets the ris_region of this ResponseModel.


        :param ris_region: The ris_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_region = ris_region

    @property
    def ris_kaptcha(self):
        """Gets the ris_kaptcha of this ResponseModel.  # noqa: E501


        :return: The ris_kaptcha of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_kaptcha

    @ris_kaptcha.setter
    def ris_kaptcha(self, ris_kaptcha):
        """Sets the ris_kaptcha of this ResponseModel.


        :param ris_kaptcha: The ris_kaptcha of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_kaptcha = ris_kaptcha

    @property
    def ris_proxy(self):
        """Gets the ris_proxy of this ResponseModel.  # noqa: E501


        :return: The ris_proxy of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_proxy

    @ris_proxy.setter
    def ris_proxy(self, ris_proxy):
        """Sets the ris_proxy of this ResponseModel.


        :param ris_proxy: The ris_proxy of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_proxy = ris_proxy

    @property
    def ris_emails(self):
        """Gets the ris_emails of this ResponseModel.  # noqa: E501


        :return: The ris_emails of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_emails

    @ris_emails.setter
    def ris_emails(self, ris_emails):
        """Sets the ris_emails of this ResponseModel.


        :param ris_emails: The ris_emails of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_emails = ris_emails

    @property
    def ris_http_country(self):
        """Gets the ris_http_country of this ResponseModel.  # noqa: E501


        :return: The ris_http_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_http_country

    @ris_http_country.setter
    def ris_http_country(self, ris_http_country):
        """Sets the ris_http_country of this ResponseModel.


        :param ris_http_country: The ris_http_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_http_country = ris_http_country

    @property
    def ris_time_zone(self):
        """Gets the ris_time_zone of this ResponseModel.  # noqa: E501


        :return: The ris_time_zone of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_time_zone

    @ris_time_zone.setter
    def ris_time_zone(self, ris_time_zone):
        """Sets the ris_time_zone of this ResponseModel.


        :param ris_time_zone: The ris_time_zone of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_time_zone = ris_time_zone

    @property
    def ris_cards(self):
        """Gets the ris_cards of this ResponseModel.  # noqa: E501


        :return: The ris_cards of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_cards

    @ris_cards.setter
    def ris_cards(self, ris_cards):
        """Sets the ris_cards of this ResponseModel.


        :param ris_cards: The ris_cards of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_cards = ris_cards

    @property
    def ris_pc_remote(self):
        """Gets the ris_pc_remote of this ResponseModel.  # noqa: E501


        :return: The ris_pc_remote of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pc_remote

    @ris_pc_remote.setter
    def ris_pc_remote(self, ris_pc_remote):
        """Sets the ris_pc_remote of this ResponseModel.


        :param ris_pc_remote: The ris_pc_remote of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pc_remote = ris_pc_remote

    @property
    def ris_devices(self):
        """Gets the ris_devices of this ResponseModel.  # noqa: E501


        :return: The ris_devices of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_devices

    @ris_devices.setter
    def ris_devices(self, ris_devices):
        """Sets the ris_devices of this ResponseModel.


        :param ris_devices: The ris_devices of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_devices = ris_devices

    @property
    def ris_device_layers(self):
        """Gets the ris_device_layers of this ResponseModel.  # noqa: E501


        :return: The ris_device_layers of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_device_layers

    @ris_device_layers.setter
    def ris_device_layers(self, ris_device_layers):
        """Sets the ris_device_layers of this ResponseModel.


        :param ris_device_layers: The ris_device_layers of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_device_layers = ris_device_layers

    @property
    def ris_mobile_forwarder(self):
        """Gets the ris_mobile_forwarder of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_forwarder of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_forwarder

    @ris_mobile_forwarder.setter
    def ris_mobile_forwarder(self, ris_mobile_forwarder):
        """Sets the ris_mobile_forwarder of this ResponseModel.


        :param ris_mobile_forwarder: The ris_mobile_forwarder of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_forwarder = ris_mobile_forwarder

    @property
    def ris_voice_device(self):
        """Gets the ris_voice_device of this ResponseModel.  # noqa: E501


        :return: The ris_voice_device of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_voice_device

    @ris_voice_device.setter
    def ris_voice_device(self, ris_voice_device):
        """Sets the ris_voice_device of this ResponseModel.


        :param ris_voice_device: The ris_voice_device of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_voice_device = ris_voice_device

    @property
    def ris_local_time(self):
        """Gets the ris_local_time of this ResponseModel.  # noqa: E501


        :return: The ris_local_time of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_local_time

    @ris_local_time.setter
    def ris_local_time(self, ris_local_time):
        """Sets the ris_local_time of this ResponseModel.


        :param ris_local_time: The ris_local_time of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_local_time = ris_local_time

    @property
    def ris_mobile_type(self):
        """Gets the ris_mobile_type of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_type of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_type

    @ris_mobile_type.setter
    def ris_mobile_type(self, ris_mobile_type):
        """Sets the ris_mobile_type of this ResponseModel.


        :param ris_mobile_type: The ris_mobile_type of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_type = ris_mobile_type

    @property
    def ris_finger_print(self):
        """Gets the ris_finger_print of this ResponseModel.  # noqa: E501


        :return: The ris_finger_print of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_finger_print

    @ris_finger_print.setter
    def ris_finger_print(self, ris_finger_print):
        """Sets the ris_finger_print of this ResponseModel.


        :param ris_finger_print: The ris_finger_print of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_finger_print = ris_finger_print

    @property
    def ris_flash(self):
        """Gets the ris_flash of this ResponseModel.  # noqa: E501


        :return: The ris_flash of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_flash

    @ris_flash.setter
    def ris_flash(self, ris_flash):
        """Sets the ris_flash of this ResponseModel.


        :param ris_flash: The ris_flash of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_flash = ris_flash

    @property
    def ris_language(self):
        """Gets the ris_language of this ResponseModel.  # noqa: E501


        :return: The ris_language of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_language

    @ris_language.setter
    def ris_language(self, ris_language):
        """Sets the ris_language of this ResponseModel.


        :param ris_language: The ris_language of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_language = ris_language

    @property
    def ris_country(self):
        """Gets the ris_country of this ResponseModel.  # noqa: E501


        :return: The ris_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_country

    @ris_country.setter
    def ris_country(self, ris_country):
        """Sets the ris_country of this ResponseModel.


        :param ris_country: The ris_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_country = ris_country

    @property
    def ris_java_script(self):
        """Gets the ris_java_script of this ResponseModel.  # noqa: E501


        :return: The ris_java_script of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_java_script

    @ris_java_script.setter
    def ris_java_script(self, ris_java_script):
        """Sets the ris_java_script of this ResponseModel.


        :param ris_java_script: The ris_java_script of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_java_script = ris_java_script

    @property
    def ris_cookies(self):
        """Gets the ris_cookies of this ResponseModel.  # noqa: E501


        :return: The ris_cookies of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_cookies

    @ris_cookies.setter
    def ris_cookies(self, ris_cookies):
        """Sets the ris_cookies of this ResponseModel.


        :param ris_cookies: The ris_cookies of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_cookies = ris_cookies

    @property
    def ris_mobile_device(self):
        """Gets the ris_mobile_device of this ResponseModel.  # noqa: E501


        :return: The ris_mobile_device of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_mobile_device

    @ris_mobile_device.setter
    def ris_mobile_device(self, ris_mobile_device):
        """Sets the ris_mobile_device of this ResponseModel.


        :param ris_mobile_device: The ris_mobile_device of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_mobile_device = ris_mobile_device

    @property
    def ris_site(self):
        """Gets the ris_site of this ResponseModel.  # noqa: E501


        :return: The ris_site of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_site

    @ris_site.setter
    def ris_site(self, ris_site):
        """Sets the ris_site of this ResponseModel.


        :param ris_site: The ris_site of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_site = ris_site

    @property
    def ris_master_card_fraud_score(self):
        """Gets the ris_master_card_fraud_score of this ResponseModel.  # noqa: E501


        :return: The ris_master_card_fraud_score of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_master_card_fraud_score

    @ris_master_card_fraud_score.setter
    def ris_master_card_fraud_score(self, ris_master_card_fraud_score):
        """Sets the ris_master_card_fraud_score of this ResponseModel.


        :param ris_master_card_fraud_score: The ris_master_card_fraud_score of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_master_card_fraud_score = ris_master_card_fraud_score

    @property
    def ris_pierced_ip_address(self):
        """Gets the ris_pierced_ip_address of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address

    @ris_pierced_ip_address.setter
    def ris_pierced_ip_address(self, ris_pierced_ip_address):
        """Sets the ris_pierced_ip_address of this ResponseModel.


        :param ris_pierced_ip_address: The ris_pierced_ip_address of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address = ris_pierced_ip_address

    @property
    def ris_pierced_ip_address_latitude(self):
        """Gets the ris_pierced_ip_address_latitude of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_latitude of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_latitude

    @ris_pierced_ip_address_latitude.setter
    def ris_pierced_ip_address_latitude(self, ris_pierced_ip_address_latitude):
        """Sets the ris_pierced_ip_address_latitude of this ResponseModel.


        :param ris_pierced_ip_address_latitude: The ris_pierced_ip_address_latitude of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_latitude = ris_pierced_ip_address_latitude

    @property
    def ris_pierced_ip_address_longitude(self):
        """Gets the ris_pierced_ip_address_longitude of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_longitude of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_longitude

    @ris_pierced_ip_address_longitude.setter
    def ris_pierced_ip_address_longitude(self, ris_pierced_ip_address_longitude):
        """Sets the ris_pierced_ip_address_longitude of this ResponseModel.


        :param ris_pierced_ip_address_longitude: The ris_pierced_ip_address_longitude of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_longitude = ris_pierced_ip_address_longitude

    @property
    def ris_pierced_ip_address_country(self):
        """Gets the ris_pierced_ip_address_country of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_country

    @ris_pierced_ip_address_country.setter
    def ris_pierced_ip_address_country(self, ris_pierced_ip_address_country):
        """Sets the ris_pierced_ip_address_country of this ResponseModel.


        :param ris_pierced_ip_address_country: The ris_pierced_ip_address_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_country = ris_pierced_ip_address_country

    @property
    def ris_pierced_ip_address_region(self):
        """Gets the ris_pierced_ip_address_region of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_region

    @ris_pierced_ip_address_region.setter
    def ris_pierced_ip_address_region(self, ris_pierced_ip_address_region):
        """Sets the ris_pierced_ip_address_region of this ResponseModel.


        :param ris_pierced_ip_address_region: The ris_pierced_ip_address_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_region = ris_pierced_ip_address_region

    @property
    def ris_pierced_ip_address_city(self):
        """Gets the ris_pierced_ip_address_city of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_city of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_city

    @ris_pierced_ip_address_city.setter
    def ris_pierced_ip_address_city(self, ris_pierced_ip_address_city):
        """Sets the ris_pierced_ip_address_city of this ResponseModel.


        :param ris_pierced_ip_address_city: The ris_pierced_ip_address_city of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_city = ris_pierced_ip_address_city

    @property
    def ris_pierced_ip_address_organization(self):
        """Gets the ris_pierced_ip_address_organization of this ResponseModel.  # noqa: E501


        :return: The ris_pierced_ip_address_organization of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_pierced_ip_address_organization

    @ris_pierced_ip_address_organization.setter
    def ris_pierced_ip_address_organization(self, ris_pierced_ip_address_organization):
        """Sets the ris_pierced_ip_address_organization of this ResponseModel.


        :param ris_pierced_ip_address_organization: The ris_pierced_ip_address_organization of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_pierced_ip_address_organization = ris_pierced_ip_address_organization

    @property
    def ris_ip_address(self):
        """Gets the ris_ip_address of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address

    @ris_ip_address.setter
    def ris_ip_address(self, ris_ip_address):
        """Sets the ris_ip_address of this ResponseModel.


        :param ris_ip_address: The ris_ip_address of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address = ris_ip_address

    @property
    def ris_ip_address_latitude(self):
        """Gets the ris_ip_address_latitude of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_latitude of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_latitude

    @ris_ip_address_latitude.setter
    def ris_ip_address_latitude(self, ris_ip_address_latitude):
        """Sets the ris_ip_address_latitude of this ResponseModel.


        :param ris_ip_address_latitude: The ris_ip_address_latitude of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_latitude = ris_ip_address_latitude

    @property
    def ris_ip_address_longitude(self):
        """Gets the ris_ip_address_longitude of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_longitude of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_longitude

    @ris_ip_address_longitude.setter
    def ris_ip_address_longitude(self, ris_ip_address_longitude):
        """Sets the ris_ip_address_longitude of this ResponseModel.


        :param ris_ip_address_longitude: The ris_ip_address_longitude of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_longitude = ris_ip_address_longitude

    @property
    def ris_ip_address_country(self):
        """Gets the ris_ip_address_country of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_country of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_country

    @ris_ip_address_country.setter
    def ris_ip_address_country(self, ris_ip_address_country):
        """Sets the ris_ip_address_country of this ResponseModel.


        :param ris_ip_address_country: The ris_ip_address_country of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_country = ris_ip_address_country

    @property
    def ris_ip_address_region(self):
        """Gets the ris_ip_address_region of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_region of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_region

    @ris_ip_address_region.setter
    def ris_ip_address_region(self, ris_ip_address_region):
        """Sets the ris_ip_address_region of this ResponseModel.


        :param ris_ip_address_region: The ris_ip_address_region of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_region = ris_ip_address_region

    @property
    def ris_ip_address_city(self):
        """Gets the ris_ip_address_city of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_city of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_city

    @ris_ip_address_city.setter
    def ris_ip_address_city(self, ris_ip_address_city):
        """Sets the ris_ip_address_city of this ResponseModel.


        :param ris_ip_address_city: The ris_ip_address_city of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_city = ris_ip_address_city

    @property
    def ris_ip_address_organization(self):
        """Gets the ris_ip_address_organization of this ResponseModel.  # noqa: E501


        :return: The ris_ip_address_organization of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_ip_address_organization

    @ris_ip_address_organization.setter
    def ris_ip_address_organization(self, ris_ip_address_organization):
        """Sets the ris_ip_address_organization of this ResponseModel.


        :param ris_ip_address_organization: The ris_ip_address_organization of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_ip_address_organization = ris_ip_address_organization

    @property
    def ris_date_device_first_seen(self):
        """Gets the ris_date_device_first_seen of this ResponseModel.  # noqa: E501


        :return: The ris_date_device_first_seen of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_date_device_first_seen

    @ris_date_device_first_seen.setter
    def ris_date_device_first_seen(self, ris_date_device_first_seen):
        """Sets the ris_date_device_first_seen of this ResponseModel.


        :param ris_date_device_first_seen: The ris_date_device_first_seen of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_date_device_first_seen = ris_date_device_first_seen

    @property
    def ris_user_agent_string(self):
        """Gets the ris_user_agent_string of this ResponseModel.  # noqa: E501


        :return: The ris_user_agent_string of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_user_agent_string

    @ris_user_agent_string.setter
    def ris_user_agent_string(self, ris_user_agent_string):
        """Sets the ris_user_agent_string of this ResponseModel.


        :param ris_user_agent_string: The ris_user_agent_string of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_user_agent_string = ris_user_agent_string

    @property
    def ris_device_screen_resolution(self):
        """Gets the ris_device_screen_resolution of this ResponseModel.  # noqa: E501


        :return: The ris_device_screen_resolution of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_device_screen_resolution

    @ris_device_screen_resolution.setter
    def ris_device_screen_resolution(self, ris_device_screen_resolution):
        """Sets the ris_device_screen_resolution of this ResponseModel.


        :param ris_device_screen_resolution: The ris_device_screen_resolution of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_device_screen_resolution = ris_device_screen_resolution

    @property
    def ris_os(self):
        """Gets the ris_os of this ResponseModel.  # noqa: E501


        :return: The ris_os of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_os

    @ris_os.setter
    def ris_os(self, ris_os):
        """Sets the ris_os of this ResponseModel.


        :param ris_os: The ris_os of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_os = ris_os

    @property
    def ris_browser(self):
        """Gets the ris_browser of this ResponseModel.  # noqa: E501


        :return: The ris_browser of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_browser

    @ris_browser.setter
    def ris_browser(self, ris_browser):
        """Sets the ris_browser of this ResponseModel.


        :param ris_browser: The ris_browser of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_browser = ris_browser

    @property
    def ris_to_string(self):
        """Gets the ris_to_string of this ResponseModel.  # noqa: E501


        :return: The ris_to_string of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_to_string

    @ris_to_string.setter
    def ris_to_string(self, ris_to_string):
        """Sets the ris_to_string of this ResponseModel.


        :param ris_to_string: The ris_to_string of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_to_string = ris_to_string

    @property
    def rules_triggered(self):
        """Gets the rules_triggered of this ResponseModel.  # noqa: E501


        :return: The rules_triggered of this ResponseModel.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rules_triggered

    @rules_triggered.setter
    def rules_triggered(self, rules_triggered):
        """Sets the rules_triggered of this ResponseModel.


        :param rules_triggered: The rules_triggered of this ResponseModel.  # noqa: E501
        :type: dict(str, object)
        """

        self._rules_triggered = rules_triggered

    @property
    def ris_number_rules_triggered(self):
        """Gets the ris_number_rules_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_number_rules_triggered of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_number_rules_triggered

    @ris_number_rules_triggered.setter
    def ris_number_rules_triggered(self, ris_number_rules_triggered):
        """Sets the ris_number_rules_triggered of this ResponseModel.


        :param ris_number_rules_triggered: The ris_number_rules_triggered of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_number_rules_triggered = ris_number_rules_triggered

    @property
    def ris_warnings(self):
        """Gets the ris_warnings of this ResponseModel.  # noqa: E501


        :return: The ris_warnings of this ResponseModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._ris_warnings

    @ris_warnings.setter
    def ris_warnings(self, ris_warnings):
        """Sets the ris_warnings of this ResponseModel.


        :param ris_warnings: The ris_warnings of this ResponseModel.  # noqa: E501
        :type: list[str]
        """

        self._ris_warnings = ris_warnings

    @property
    def ris_warning_count(self):
        """Gets the ris_warning_count of this ResponseModel.  # noqa: E501


        :return: The ris_warning_count of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_warning_count

    @ris_warning_count.setter
    def ris_warning_count(self, ris_warning_count):
        """Sets the ris_warning_count of this ResponseModel.


        :param ris_warning_count: The ris_warning_count of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_warning_count = ris_warning_count

    @property
    def ris_errors(self):
        """Gets the ris_errors of this ResponseModel.  # noqa: E501


        :return: The ris_errors of this ResponseModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._ris_errors

    @ris_errors.setter
    def ris_errors(self, ris_errors):
        """Sets the ris_errors of this ResponseModel.


        :param ris_errors: The ris_errors of this ResponseModel.  # noqa: E501
        :type: list[str]
        """

        self._ris_errors = ris_errors

    @property
    def ris_error_count(self):
        """Gets the ris_error_count of this ResponseModel.  # noqa: E501


        :return: The ris_error_count of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_error_count

    @ris_error_count.setter
    def ris_error_count(self, ris_error_count):
        """Sets the ris_error_count of this ResponseModel.


        :param ris_error_count: The ris_error_count of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_error_count = ris_error_count

    @property
    def has_errors(self):
        """Gets the has_errors of this ResponseModel.  # noqa: E501


        :return: The has_errors of this ResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._has_errors

    @has_errors.setter
    def has_errors(self, has_errors):
        """Sets the has_errors of this ResponseModel.


        :param has_errors: The has_errors of this ResponseModel.  # noqa: E501
        :type: bool
        """

        self._has_errors = has_errors

    @property
    def ris_lexis_nexis_cbd_attributes(self):
        """Gets the ris_lexis_nexis_cbd_attributes of this ResponseModel.  # noqa: E501


        :return: The ris_lexis_nexis_cbd_attributes of this ResponseModel.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._ris_lexis_nexis_cbd_attributes

    @ris_lexis_nexis_cbd_attributes.setter
    def ris_lexis_nexis_cbd_attributes(self, ris_lexis_nexis_cbd_attributes):
        """Sets the ris_lexis_nexis_cbd_attributes of this ResponseModel.


        :param ris_lexis_nexis_cbd_attributes: The ris_lexis_nexis_cbd_attributes of this ResponseModel.  # noqa: E501
        :type: dict(str, object)
        """

        self._ris_lexis_nexis_cbd_attributes = ris_lexis_nexis_cbd_attributes

    @property
    def ris_lexis_nexis_instant_id_attributes(self):
        """Gets the ris_lexis_nexis_instant_id_attributes of this ResponseModel.  # noqa: E501


        :return: The ris_lexis_nexis_instant_id_attributes of this ResponseModel.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._ris_lexis_nexis_instant_id_attributes

    @ris_lexis_nexis_instant_id_attributes.setter
    def ris_lexis_nexis_instant_id_attributes(self, ris_lexis_nexis_instant_id_attributes):
        """Sets the ris_lexis_nexis_instant_id_attributes of this ResponseModel.


        :param ris_lexis_nexis_instant_id_attributes: The ris_lexis_nexis_instant_id_attributes of this ResponseModel.  # noqa: E501
        :type: dict(str, object)
        """

        self._ris_lexis_nexis_instant_id_attributes = ris_lexis_nexis_instant_id_attributes

    @property
    def ris_counters_triggered(self):
        """Gets the ris_counters_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_counters_triggered of this ResponseModel.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._ris_counters_triggered

    @ris_counters_triggered.setter
    def ris_counters_triggered(self, ris_counters_triggered):
        """Sets the ris_counters_triggered of this ResponseModel.


        :param ris_counters_triggered: The ris_counters_triggered of this ResponseModel.  # noqa: E501
        :type: dict(str, object)
        """

        self._ris_counters_triggered = ris_counters_triggered

    @property
    def ris_number_counters_triggered(self):
        """Gets the ris_number_counters_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_number_counters_triggered of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_number_counters_triggered

    @ris_number_counters_triggered.setter
    def ris_number_counters_triggered(self, ris_number_counters_triggered):
        """Sets the ris_number_counters_triggered of this ResponseModel.


        :param ris_number_counters_triggered: The ris_number_counters_triggered of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_number_counters_triggered = ris_number_counters_triggered

    @property
    def ris_kount_central_customer_id(self):
        """Gets the ris_kount_central_customer_id of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_customer_id of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_kount_central_customer_id

    @ris_kount_central_customer_id.setter
    def ris_kount_central_customer_id(self, ris_kount_central_customer_id):
        """Sets the ris_kount_central_customer_id of this ResponseModel.


        :param ris_kount_central_customer_id: The ris_kount_central_customer_id of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_kount_central_customer_id = ris_kount_central_customer_id

    @property
    def ris_kount_central_warnings(self):
        """Gets the ris_kount_central_warnings of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_warnings of this ResponseModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._ris_kount_central_warnings

    @ris_kount_central_warnings.setter
    def ris_kount_central_warnings(self, ris_kount_central_warnings):
        """Sets the ris_kount_central_warnings of this ResponseModel.


        :param ris_kount_central_warnings: The ris_kount_central_warnings of this ResponseModel.  # noqa: E501
        :type: list[str]
        """

        self._ris_kount_central_warnings = ris_kount_central_warnings

    @property
    def ris_kount_central_warning_count(self):
        """Gets the ris_kount_central_warning_count of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_warning_count of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_kount_central_warning_count

    @ris_kount_central_warning_count.setter
    def ris_kount_central_warning_count(self, ris_kount_central_warning_count):
        """Sets the ris_kount_central_warning_count of this ResponseModel.


        :param ris_kount_central_warning_count: The ris_kount_central_warning_count of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_kount_central_warning_count = ris_kount_central_warning_count

    @property
    def ris_kount_central_errors(self):
        """Gets the ris_kount_central_errors of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_errors of this ResponseModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._ris_kount_central_errors

    @ris_kount_central_errors.setter
    def ris_kount_central_errors(self, ris_kount_central_errors):
        """Sets the ris_kount_central_errors of this ResponseModel.


        :param ris_kount_central_errors: The ris_kount_central_errors of this ResponseModel.  # noqa: E501
        :type: list[str]
        """

        self._ris_kount_central_errors = ris_kount_central_errors

    @property
    def ris_kount_central_error_count(self):
        """Gets the ris_kount_central_error_count of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_error_count of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_kount_central_error_count

    @ris_kount_central_error_count.setter
    def ris_kount_central_error_count(self, ris_kount_central_error_count):
        """Sets the ris_kount_central_error_count of this ResponseModel.


        :param ris_kount_central_error_count: The ris_kount_central_error_count of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_kount_central_error_count = ris_kount_central_error_count

    @property
    def ris_kount_central_number_thresholds_triggered(self):
        """Gets the ris_kount_central_number_thresholds_triggered of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_number_thresholds_triggered of this ResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._ris_kount_central_number_thresholds_triggered

    @ris_kount_central_number_thresholds_triggered.setter
    def ris_kount_central_number_thresholds_triggered(self, ris_kount_central_number_thresholds_triggered):
        """Sets the ris_kount_central_number_thresholds_triggered of this ResponseModel.


        :param ris_kount_central_number_thresholds_triggered: The ris_kount_central_number_thresholds_triggered of this ResponseModel.  # noqa: E501
        :type: int
        """

        self._ris_kount_central_number_thresholds_triggered = ris_kount_central_number_thresholds_triggered

    @property
    def ris_kount_central_decision(self):
        """Gets the ris_kount_central_decision of this ResponseModel.  # noqa: E501


        :return: The ris_kount_central_decision of this ResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._ris_kount_central_decision

    @ris_kount_central_decision.setter
    def ris_kount_central_decision(self, ris_kount_central_decision):
        """Sets the ris_kount_central_decision of this ResponseModel.


        :param ris_kount_central_decision: The ris_kount_central_decision of this ResponseModel.  # noqa: E501
        :type: str
        """

        self._ris_kount_central_decision = ris_kount_central_decision

    @property
    def kount_central_threshold_events(self):
        """Gets the kount_central_threshold_events of this ResponseModel.  # noqa: E501


        :return: The kount_central_threshold_events of this ResponseModel.  # noqa: E501
        :rtype: list[KcEvent]
        """
        return self._kount_central_threshold_events

    @kount_central_threshold_events.setter
    def kount_central_threshold_events(self, kount_central_threshold_events):
        """Sets the kount_central_threshold_events of this ResponseModel.


        :param kount_central_threshold_events: The kount_central_threshold_events of this ResponseModel.  # noqa: E501
        :type: list[KcEvent]
        """

        self._kount_central_threshold_events = kount_central_threshold_events

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResponseModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
