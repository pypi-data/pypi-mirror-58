

class {{ artifacts.name }}(models.{{ artifacts.name }}):  # type: ignore
    """SQLAlchemy model."""

    # SQLAlchemy properties
    __table__: sqlalchemy.Table
    __tablename__: str
    query: orm.Query{% if not artifacts.empty %}

    # Model properties{% for column in artifacts.columns %}
    {{ column.name }}: {{ column.type }}{% endfor %}{% endif %}

    def __init__(self{{ arg_input_init_source }}) -> None:
        """Construct."""
        {{ arg_kwargs_source }}

        super().__init__(**kwargs)

    @classmethod
    def from_dict(cls{{ arg_input_from_dict_source }}) -> "{{ artifacts.name }}":
        """Construct from a dictionary (eg. a POST payload)."""
        {{ arg_kwargs_source }}

        return super().from_dict(**kwargs)

    def to_dict(self) -> {{ artifacts.name }}Dict:
        """Convert to a dictionary (eg. to send back for a GET request)."""
        return super().to_dict()
